// vijay.manimaran@cdk.com - created
// 2018-02-19 matt.keefe@cdk.com - updated for sort order, formatting, 
global class COM_KnowledgeArticle_Controller {
    public static String Online = 'Online';
    public static String language = 'en_US';
    
    @AuraEnabled
    public static Integer knowledgeArticleVersionCount(String TopicName, Integer articleCounter)
    { 
        system.debug(TopicName); 
        
        string IdFilter = '';
        try { // try to convert the Id, if successful, set IdFilter
            Id TopicId = Id.valueOf(TopicName);
            IdFilter = 'OR Topic.Id = \'' + TopicId + '\' ';
        } catch(Exception e) {}
        
        map<ID,TopicAssignment> topicassignments = new map<ID,TopicAssignment>(
            (list<TopicAssignment>) Database.query(
                'SELECT EntityID, Topic.Name ' +
                'FROM TopicAssignment ' +
                'WHERE Topic.Name = \'' + TopicName + '\' ' +
                IdFilter + 
                'LIMIT 1000 '
            )
        );
        
        set<ID> Ids = new Set<ID>();
        
        for(TopicAssignment tp :topicassignments.values()){Ids.add(tp.EntityId);}
        
        map<Id,Knowledge__kav> mapkarticle = new map<Id,Knowledge__kav>
            ([
                SELECT KnowledgeArticleId, Title, UrlName, Image_Link__c, LastPublishedDate, Summary 
                FROM Knowledge__kav 
                WHERE publishStatus ='Online'
                AND language = 'en_US'
                AND Id IN : Ids
                Order By Title Asc
            ]);
        
        Decimal articlecounts = mapkarticle.size();
        articlecounts = articlecounts/articleCounter;
        
        Integer articleCount = Integer.valueOf(articlecounts.round(system.roundingMode.CEILING));
        
        return articleCount;
    }
    
    @AuraEnabled
    public static list<knowledgeArticleWrapper> KnowledgeArticleVersionImage(
        String articleType, String TopicName, Integer articleCounter,
        String dsg_isValid, Integer counter, String showPagination, String sortBy)
    {
        system.debug(TopicName); 
        
        string IdFilter = '';
        try { // try to convert the Id, if successful, set IdFilter
            Id TopicId = Id.valueOf(TopicName);
            IdFilter = 'OR Topic.Id = \'' + TopicId + '\' ';
        } catch(Exception e) {}
        
        map<ID,TopicAssignment> topicassignments = new map<ID,TopicAssignment>(
            (list<TopicAssignment>) Database.query(
                'SELECT EntityID, Topic.Name ' +
                'FROM TopicAssignment ' +
                'WHERE Topic.Name = \'' + TopicName + '\' ' +
                IdFilter + 
                'LIMIT 1000 '
            )
        );
        
        system.debug(topicassignments);
        
        set<ID> Ids = new Set<ID>();
        for(TopicAssignment tp :topicassignments.values()){Ids.add(tp.EntityId);}
        
        list<Knowledge__kav> communityAritcles = new list<Knowledge__kav>();
        
        // 2018-02-12 matt.keefe@cdk.com - added sort order option for Override Publish Date
        string baseArticleQuery = 'SELECT Id, KnowledgeArticleId, Title, Summary, UrlName, Image__Name__s, Image_Link__c, '
            +' Attachment__ContentType__s, Content__c, LastPublishedDate, Override_Publish_Date__c, '
            +' Hide_Votes__c, Hide_Summary__c, Show_Chatter__c, Hide_Views__c, Hide_Topic__c '
            +' FROM Knowledge__kav'
            +' WHERE publishStatus = \'Online\''
            +' AND language =\'en_US\' '
            +' AND Id IN :Ids ';
        
        string sortOrder = '';
        if(sortBy != null) {
            sortOrder = sortBy.deleteWhitespace().toLowerCase(); // convert to lowercase
        }
        
        if(sortOrder == 'name' || sortOrder == 'title') 
        {
            // query directly by title
            communityAritcles = 
                Database.query(
                    baseArticleQuery + ' Order By Title ASC Limit :articleCounter '
                );
        }
        else 
        {
            // 2018-02-08 matt.keefe@cdk.com - GLOBIT-8281 added Override_Publish_Date__c, if set
            // query articles by both Override Published Date and Last Published Date, then merge the two
            map<Id, Knowledge__kav> communityAritclesByKnowledgeId = new map<Id, Knowledge__kav>();
            
            DateTime minDateTime = DateTime.now();
            
            // query and order by Override_Publish_Date__c - will be merged after query, and final sort will be completed
            list<Knowledge__kav> communityAritclesOverride = 
                Database.query(
                    baseArticleQuery + 
                    'AND Override_Publish_Date__c != null ' + 
                    'Order By Override_Publish_Date__c DESC Limit :articleCounter '
                );
            
            for(Knowledge__kav ka : communityAritclesOverride) { system.debug(ka.Title + ' --- ' + ka.Override_Publish_Date__c); }
            
            // add to map to remove duplicates, and set minDateTime for LastPublishedDate query
            for(Knowledge__kav kav : communityAritclesOverride) {
                communityAritclesByKnowledgeId.put(kav.KnowledgeArticleId, kav);
            }
            
            // double the articleCounter for LastPublishedDate query to make sure all necessary articles are pulled
            //   this is to account for the merge process (where some duplicates from the Override query are merged in)
            //   if there is an article with a date greater than articles in the Override list, we want to make sure not 
            //   to miss that one...
            integer articleLimit = articleCounter*2; 
            
            // query and order by LastPublishedDate - will be merged after query, and final sort will be completed
            list<Knowledge__kav> communityAritclesLastPub = 
                Database.query(
                    baseArticleQuery + ' Order By LastPublishedDate DESC Limit :articleLimit '
                );
            
            for(Knowledge__kav ka : communityAritclesLastPub) { system.debug(ka.Title + ' --- ' + ka.LastPublishedDate); }
            
            // add to map to remove duplicates
            for(Knowledge__kav kav : communityAritclesLastPub) {
                communityAritclesByKnowledgeId.put(kav.KnowledgeArticleId, kav);
            }
            
            // community Articles will contain double the number of articles
            communityAritcles.addAll(communityAritclesByKnowledgeId.values());
        } 
        
        list<KnowledgeArticleWrapper> kavList = new list<KnowledgeArticleWrapper>();
        
        for(Knowledge__kav ka : communityAritcles)
        {
            if(ka.Override_Publish_Date__c == null) {
                ka.Override_Publish_Date__c = ka.LastPublishedDate;
            }
            
            system.debug(ka.Title + ' --- ' + ka.Override_Publish_Date__c);
            
            knowledgeArticleWrapper kvw = new knowledgeArticleWrapper();
            kvw = COM_KnowledgeArticle_Controller.utilityKnowledgeArticle(articleType, (Knowledge__kav)ka, ka, topicassignments); 
            kvw.sortOrder = sortOrder; // 2018-02-19 matt.keefe@cdk.com - GLOBIT-11756 sort bug for sort by name fixed
            
            kavList.add(kvw);
        }
        
        kavList.sort(); // sort by last published date (default) or alphabetical
        
        if(articleCounter > kavList.size()) { articleCounter = kavList.size(); }
        
        // articles to return
        list<KnowledgeArticleWrapper> articlesToReturn = new list<KnowledgeArticleWrapper>();
        
        // set hard limit on number to return (for loadmore)
        //   this MUST be here, because Override_Publish_Date__c and LastPublishedDate queries may perhaps cause 
        //   double the number of articles to be returned
        for(Integer i=0; i<articleCounter; i++) {
            articlesToReturn.add(kavList[i]);
        }
        
        return articlesToReturn;
    }
    
    @AuraEnabled
    public static knowledgeArticleWrapper utilityKnowledgeArticle(
        String articleType, Knowledge__kav knowledgeArticleObj, Sobject CAK, map<Id,TopicAssignment> maptp)
    {
        list<knowledgeArticleWrapper> kavlist = new list<knowledgeArticleWrapper>();
        knowledgeArticleWrapper kvw = new knowledgeArticleWrapper();
        list<TopicAssignmentWrapper> topicAssignWrapper = new list<TopicAssignmentWrapper>();
        Integer totalTopics = maptp.size();
        
        for(Integer i=0; i<totalTopics; i++)
        {
            TopicAssignment p = maptp.values().get(i);
            TopicAssignmentWrapper topicAssignWrapperObj = new TopicAssignmentWrapper();
            if(p.EntityId == knowledgeArticleObj.Id)
            {
                topicAssignWrapperObj.topicName = p.topic.Name;
                topicAssignWrapperObj.topicUrlName = knowledgeArticleObj.UrlName;
                topicAssignWrapperObj.titleId = p.topicId; 
            }
            topicAssignWrapper.add(topicAssignWrapperObj);
        }
        
        Schema.DescribeSObjectResult KnowledgeArticleVersionDescribe = Schema.getGlobalDescribe().get(articleType+'__kav').getDescribe();
        
        // 2018-02-08 matt.keefe@cdk.com - GLOBIT-8281 Override Publish Date
        kvw.LastPublishedDate = COM_KnowledgeArticle_Controller.getPublishedDate(
            CAK.get('Override_Publish_Date__c'), knowledgeArticleObj.LastPublishedDate);
        
        kvw.KnowledgeArticleVersionlst = knowledgeArticleObj;
        kvw.tpws = topicAssignWrapper;
        kvw.title = knowledgeArticleObj.Title;
        kvw.documentAccess = KnowledgeArticleVersionDescribe.updateable;
        
        if(kvw.LastPublishedDate >= Date.today().addDays(-7) &&  kvw.LastPublishedDate <= Date.today())
        {
            kvw.newDocument = true;
        }
        else
        {
            kvw.newDocument =false;
        }
        
        kvw.EMPCommunityArticle = CAK;
        kvw.KnowledgeArtcle_Id = knowledgeArticleObj.Id;
        kvw.KnowledgeArtcle_RecordId = knowledgeArticleObj.KnowledgeArticleId;
        
        return kvw;
    }
    
    // 2018-02-08 matt.keefe@cdk.com - GLOBIT-8281 Override Publish Date
    public static DateTime getPublishedDate(object OverrideDate, DateTime PublishedDate) 
    {
        DateTime LastPublishedDate = DateTime.now(); // default to now, never return null
        
        if(OverrideDate != null) {
            try {
                LastPublishedDate = DateTime.valueOf(OverrideDate);
            } catch(Exception OverrideDateException) { system.debug(OverrideDateException); }
        }
        else {
            LastPublishedDate = PublishedDate;
        }
        
        return LastPublishedDate;
    }
    
    @AuraEnabled
    public static knowledgeArticleWrapper articleDetails(String articleType, String topicName)
    {
        Knowledge__kav mapkarticle = [
            SELECT KnowledgeArticleId, Id, Title, UrlName, LastPublishedDate, Summary
            FROM Knowledge__kav 
            WHERE publishStatus ='Online'
            AND language = 'en_US'
            AND UrlName =: topicName
        ];
        
        Sobject communityAritcle= COM_KnowledgeArticle_Controller.communityArticleObj(articleType, mapkarticle.KnowledgeArticleId);
        
        map<Id,TopicAssignment> maptp = new map<Id,TopicAssignment>(
            [
                SELECT Id, EntityId,Topic.Name 
                FROM TopicAssignment 
                WHERE EntityId =: mapkarticle.Id
            ]
        );
        
        knowledgeArticleWrapper kavlist = new knowledgeArticleWrapper();
        kavlist = COM_KnowledgeArticle_Controller.utilityKnowledgeArticle(articleType, mapkarticle, CommunityAritcle, maptp); 
        
        return kavlist;
    }
    
    @AuraEnabled
    public static knowledgeArticleWrapper KnowledgeArticleViewStat(String articleType, String knowledgeArticleId){
        KnowledgeArticleViewStat KnowledgeArticleViewStats = new  KnowledgeArticleViewStat();
        knowledgeArticleWrapper knowledgeArticleWrapperRecord = new knowledgeArticleWrapper();      
        
        try{
            KnowledgeArticleViewStats = [
                SELECT ParentId, ViewCount FROM KnowledgeArticleViewStat 
                WHERE ParentId IN( 
                    SELECT KnowledgeArticleId
                    FROM Knowledge__kav 
                    WHERE publishStatus ='Online'
                    AND language = 'en_US'
                    AND UrlName =: knowledgeArticleId)
                AND Channel = 'All Channels'
            ];
            
            Sobject communityAritcle= COM_KnowledgeArticle_Controller.communityArticleObj(articleType,KnowledgeArticleViewStats.ParentId);
            
            knowledgeArticleWrapperRecord.TotalViews = KnowledgeArticleViewStats.viewcount;
            knowledgeArticleWrapperRecord.EMPCommunityArticle = communityAritcle;
            return knowledgeArticleWrapperRecord;
            
        }
        catch(exception ex){
            return knowledgeArticleWrapperRecord;
        }
        
    }
    
    /* code for vote */
    @AuraEnabled
    public static knowledgeArticleWrapper createVote(String articleType, String knowledgeArticleID, String voteType)
    {
        Knowledge__kav mapkarticle = [
            SELECT KnowledgeArticleId, Id, Title, UrlName, LastPublishedDate, Summary
            FROM Knowledge__kav 
            WHERE publishStatus ='Online'
            AND language = 'en_US'
            AND UrlName =: knowledgeArticleID
        ];
        
        knowledgeArticleWrapper knowledgeArticleWrapperRecord=new knowledgeArticleWrapper();
        list<vote> totalVotes = new list<vote> ();
        totalVotes = [Select ParentId,Type FROM vote where ParentId =: mapkarticle.knowledgeArticleID and createdbyID =: userinfo.getUserId()]; 
        
        if(totalVotes.size() > 0){
            knowledgeArticleWrapperRecord.errorMessage ='You have already Voted';
            knowledgeArticleWrapper KAW=new knowledgeArticleWrapper();
            
            KAW = COM_KnowledgeArticle_Controller.getvotes(articleType,knowledgeArticleID);
            knowledgeArticleWrapperRecord.voteup = kaw.voteup;
            knowledgeArticleWrapperRecord.votedown = kaw.votedown;
            
        } else {
            Vote userVote=new Vote();
            userVote.ParentId= mapkarticle.knowledgeArticleID;
            userVote.Type= voteType; 
            Database.SaveResult userVoteInsertResult=Database.insert(userVote, false);
        }
        return knowledgeArticleWrapperRecord;
    }
    
    @AuraEnabled
    public static knowledgeArticleWrapper getvotes(String articleType,String knowledgearticleID)
    {
        Knowledge__kav mapkarticle = [
            SELECT KnowledgeArticleId, Id, UrlName
            FROM Knowledge__kav 
            WHERE publishStatus = 'Online'
            AND language = 'en_US'
            AND UrlName =: knowledgeArticleID
        ];
        
        Sobject communityAritcle = COM_KnowledgeArticle_Controller.communityArticleObj(articleType,mapkarticle.KnowledgeArticleId);
        
        list<Vote> votelist = new list<Vote>();
        votelist = [
            Select ParentId, Type 
            From Vote 
            Where ParentId =: mapkarticle.KnowledgeArticleId
        ];
        
        knowledgeArticleWrapper KAW = new knowledgeArticleWrapper();
        
        for(vote v: votelist){
            Integer i=0, j=0;
            
            if(v.Type == '5'){
                i = i+1;
            } else if(v.Type == '1') {
                j = j+1;
            } else {
                i=0; j=0;
            }
            KAW.voteup = i;
            KAW.votedown = j;
        }
        
        KAW.EMPCommunityArticle = communityAritcle;
        return KAW;
    }
    
    @AuraEnabled
    public static Boolean articleEditAccess(String articleType)
    {    
        Schema.DescribeSObjectResult KnowledgeArticleVersionDescribe = Schema.getGlobalDescribe().get(articleType+'__kav').getDescribe();
        Boolean editaccess= KnowledgeArticleVersionDescribe.updateable;
        return editaccess;
    }
    
    
    @AuraEnabled 
    public static Sobject communityArticleObj(String articleType, String knowledgearticleID){
        
        // 2018-02-08 matt.keefe@cdk.com - GLOBIT-8281 added Override_Publish_Date__c
        Sobject CommunityAritcle =
            Database.query(
                'Select Id, KnowledgeArticleId, Content__c, Title, Summary, Attachment__Name__s, CreatedDate, Override_Publish_Date__c, '
                + 'Hide_Votes__c, Hide_Summary__c, Hide_Views__c, Hide_Topic__c,'
                +' Image__Name__s, Image_Link__c, Attachment__ContentType__s, Show_Chatter__c'
                +' From '+articleType+'__kav'
                +' Where publishStatus = \'Online\''
                +' And language =\'en_US\''
                +' And KnowledgeArticleId =: knowledgearticleID '
                +' Order By Override_Publish_Date__c, LastPublishedDate '
            ); 
        
        return CommunityAritcle;
    }
    
    global class knowledgeArticleWrapper implements Comparable 
    {
        // 2018-02-19 matt.keefe@cdk.com - GLOBIT-11756 - added sort options
        @AuraEnabled
        public string sortOrder {get;set;}
        
        @AuraEnabled
        public Knowledge__kav KnowledgeArticleVersionlst {get;set;}
        
        @AuraEnabled
        public Sobject EMPCommunityArticle {get;set;}
        
        @AuraEnabled
        public list<vote> votelst {get;set;}
        
        @AuraEnabled
        public Integer voteup {get;set;}
        
        @AuraEnabled
        public Integer votedown {get;set;}
        
        @AuraEnabled 
        public list<TopicAssignmentWrapper> tpws {get;set;}
        
        @AuraEnabled
        public String errorMessage {get; set;}
        
        @AuraEnabled
        public String Title {get; set;}
        
        @AuraEnabled
        public Boolean documentAccess {get; set;}
        
        @AuraEnabled 
        public Integer TotalViews {get;set;}  
        
        @AuraEnabled
        public Boolean newDocument {get;set;}    
        
        @AuraEnabled
        public String KnowledgeArtcle_Id {get;set;} 
        
        @AuraEnabled
        public String KnowledgeArtcle_RecordId {get;set;} 
        
        // 2018-02-08 matt.keefe@cdk.com - GLOBIT-8281 Override Publish Date
        @AuraEnabled
        public DateTime LastPublishedDate {get;set;}
        
        // 2018-02-08 matt.keefe@cdk.com - GLOBIT-8281 added custom sort based on new LastPublishedDate
        // Compare knowledgeArticleWrapper based on the LastPublishedDate
        global Integer compareTo(Object compareTo) 
        {
            knowledgeArticleWrapper compareToArticle = (knowledgeArticleWrapper) compareTo;
            Integer returnValue = 0; // The return value of 0 indicates that both elements are equal.
            Boolean sortByLastPublished = true;
            
            if(sortOrder.toLowerCase() == 'name' || sortOrder == 'title') { sortByLastPublished = false; } 
            
            if(sortByLastPublished) 
            {
                if (LastPublishedDate > compareToArticle.LastPublishedDate) {
                    returnValue = -1; // Set return value to a positive value, older last
                } 
                else if (LastPublishedDate < compareToArticle.LastPublishedDate) {
                    returnValue = 1; // Set return value to a negative value, recent first
                }
            }
            else
            {
                if (Title > compareToArticle.Title) {
                    returnValue = 1; // Set return value to a positive value, alpha is greater
                } 
                else if (Title < compareToArticle.Title) {
                    returnValue = -1; // Set return value to a negative value, alpha is less
                }
            }
            
            return returnValue;       
        }
    }
    
    public class TopicAssignmentWrapper
    {
        @AuraEnabled 
        public list<TopicAssignment> tpw{get;set;}
        
        @AuraEnabled
        public string topicName{get;set;}
        
        @AuraEnabled
        public string topicURLName{get;set;}
        
        @AuraEnabled
        public string titleId{get;set;} 
    }
}