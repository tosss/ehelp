<apex:page title="MapAnything Settings" controller="sma.MapAnythingBaseObjects" setup="true" extensions="sma.MARemoteFunctions">
    <apex:outputPanel rendered="{!hasMapAnythingLiveLicense}">
        <script type='text/javascript'>
            if (typeof $ == 'undefined')
            {
                document.write("<script type='text/javascript' src='{!URLFOR($Resource.MapAnything, 'js/jquery-1.7.1.min.js')}'></script"+">");
                document.write("<script type='text/javascript' src='{!URLFOR($Resource.MapAnything, 'jquery/jquery-ui.min.js')}'></script"+">");
                document.write("<link rel='stylesheet' type='text/css' href='{!URLFOR($Resource.MapAnything, 'jquery/jquery-ui.css')}'></link"+">");
                document.write("<script type='text/javascript' src='{!URLFOR($Resource.AdminSettings, 'js/date.js')}'></script"+">");
                document.write("<script type='text/javascript' src='{!URLFOR($Resource.MapAnything, 'jstree/jquery.jstree2.js')}'></script"+">");
            }
        </script>
        
        <script>
            var MARemoting = {
                processAJAXRequest : '{!$RemoteAction.MARemoteFunctions.processAJAXRequest}'
            }
        </script>
        
        <!-- jQuery Combo Box (depends on jQuery UI) -->
        <script src="{!URLFOR($Resource.AdminSettings, 'js/combobox/jquery.combobox.js')}" type="text/javascript"></script>
        <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.AdminSettings, 'js/combobox/jquery.combobox.css')}" />
        
        <!-- jQuery Multiselect (depends on jQuery UI) -->
        <script src="{!URLFOR($Resource.AdminSettings, 'js/multiselect/jquery.multiselect.min.js')}" type="text/javascript"></script>
        <script src="{!URLFOR($Resource.AdminSettings, 'js/multiselect/jquery.multiselect.filter.js')}" type="text/javascript"></script>
        <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.AdminSettings, 'js/multiselect/jquery.multiselect.css')}" />
        <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.AdminSettings, 'js/multiselect/jquery.multiselect.filter.css')}" />    
            
        <!-- JS Color -->
        <apex:includeScript value="{!URLFOR($Resource.sma__MapAnything, 'jscolor/jscolor.js')}"/>
    
        <!-- Glyphicons -->
        <apex:stylesheet value="{!URLFOR($Resource.sma__MapAnything, 'css/MapAnything.css')}"/>
        
        <!-- JS Zip -->
        <apex:includeScript value="{!URLFOR($Resource.sma__AdminSettings, 'js/jszip/jszip.js')}"/>
    	<apex:includeScript value="{!URLFOR($Resource.sma__AdminSettings, 'js/jszip/jszip-load.js')}"/>
    	<apex:includeScript value="{!URLFOR($Resource.sma__AdminSettings, 'js/jszip/jszip-deflate.js')}"/>
    	<apex:includeScript value="{!URLFOR($Resource.sma__AdminSettings, 'js/jszip/jszip-inflate.js')}"/>
        
        <!-- Helpers -->
        <script type='text/javascript' src="{!URLFOR($Resource.MapAnythingJS, 'JSHelperFunctions.js')}"></script>
        <c:CSSHelperBlue />
    
        <!-- CSS -->
        <apex:stylesheet value="{!URLFOR($Resource.sma__MapAnything, 'css/style.css')}"/>
        <apex:stylesheet value="{!URLFOR($Resource.sma__MapAnything, 'style.css')}"/>
        
        <!-- Lightning Design System 2.3.0 -->
        <link type="text/css" rel="stylesheet" href="{!URLFOR($Resource.MapAnythingJS, 'styles/css/salesforce-lightning-design-system-vf-2.3.0.min.css')}" />
        
        <!-- icon-font -->
        <apex:stylesheet value="{!URLFOR($Resource.sma__MapAnythingJS, 'styles/styles.css')}"/>
        <!-- MapAnything Configuration Page Styling -->
        <apex:stylesheet value="{!URLFOR($Resource.sma__MapAnythingJS, 'styles/css/ma-configuration-ui.css')}"/>
        
        <apex:outputPanel layout="none" rendered="{! $User.UIThemeDisplayed == 'Theme4d' }">
            <script type='text/javascript'>
                $.ajaxSetup({
                    dataFilter: function (rawData,type)
                    {
                        try
                        {
                            //console.log('rawdata:', rawData);
                            //console.log(type);
                            
                            if (rawData != undefined  && rawData != '')
                            {
                                if (type === 'JSON' || type == 'JSONP' || type=='json' || type =='jsonp')
                                {
                                    //console.log('rawdata 2:', rawData.replace(/<script.*?>.*?<\/script>/igm, ''));
                                    return rawData.replace(/<script.*?>.*?<\/script>/igm, '');
                                }
                            }
                        }
                        catch (ex)
                        {
                            
                        }
                    }
                });
            
                jQuery.ajaxSetup({
                    dataFilter: function (rawData,type)
                    {
                        try
                        {
                            //console.log('rawdata:', rawData);
                            //console.log(type);
                            
                            if (rawData != undefined  && rawData != '')
                            {
                                if (type === 'JSON' || type == 'JSONP' || type=='json' || type =='jsonp')
                                {
                                    //console.log('rawdata 2:', rawData.replace(/<script.*?>.*?<\/script>/igm, ''));
                                    return rawData.replace(/<script.*?>.*?<\/script>/igm, '');
                                }
                            }
                        }
                        catch (ex)
                        {
                            
                        }
                    }
                });
        
            </script>
        </apex:outputPanel>
        
        <style type='text/css' class='adminsettings-css'>
    
            .modal-layer {
                display: none;
                position: absolute;
                z-index: 1;
                width: 100%;
                height: 100%;
                background-color: #000000;
                opacity: 0.5;
                -ms-filter: progid:DXImageTransform.Microsoft.Alpha(Opacity = 50);
                filter: alpha(opacity = 50);
            }
        
            /* Basics */                
            #adminsettings-error {
                padding: 15px;
                width: 800px;
                overflow: hidden;
            
                {! IF(pageState != 'error', 'display: none;', '') }
            }
            #adminsettings-error h3 {
                display: block;
                margin: 10px 0;
                color: #757575;
            }
            #adminsettings { 
                padding: 16px 16px 16px 10px;
                width: 95%;
                overflow: hidden;
                
                {! IF(pageState != 'edit', 'display: none;', '') }
            }
            #adminsettings .availableobject-settings {            
                width: 100%;
                overflow: hidden;
                display: none;
            }
            #adminsettings .baseobject-settings {            
                width: 100%;
                overflow: hidden;
                display: none;
            }
            #adminsettings .baseobject-settings .mapitdescription {
                color: #757575; 
                font-weight: bold;        
            }
            #adminsettings-templates {
                display: none;
            }
            span.link
            {
                color: blue;
                cursor: pointer;
            }
            span.link.small
            {
                font-size: 10px;
                font-weight: bold;
            }
            .warning-box {
                min-height: 80px;
                border: 1px solid #faebcc;
                color: #8a6d3b;
                background-color: #fcf8e3;
            }
            .dateliteralpicker
            {
                cursor: pointer;
            }
            .value input.invalid
            {
                background: transparent url({!URLFOR($Resource.QueryEditor, 'images/icons/badge-circle-cross-16.png')}) no-repeat right center;
            }
            .ui-autocomplete
            {
                z-index: 99999 !important;
                max-height: 300px !important;
                overflow-y: auto;
                overflow-x: hidden;
            }
            .PICKLIST > ul, .filterbyowner ul
            {
                list-style-type: none;
                padding: 0;
                margin: 0;
            }
            .PICKLIST li, .filterbyowner li
            {
                padding: 0;
                margin: 0;
            }
            #adminsettings tr > td.actions > div, #adminsettings tr > td.crossfilteractions > div, #adminsettings tr > td.activitysubfilteractions > div
            {
                display: none;
            }
            #adminsettings tr:hover > td.actions > div, #adminsettings tr:hover > td.crossfilteractions > div, #adminsettings tr:hover > td.activitysubfilteractions > div
            {
                display: block;
            }        
            
            /* Tabs */
            #adminsettings .BottomTabs
            {
                background: none;
                border: none;
            }
            #adminsettings .BottomTabs > ul
            {
                width: auto;
                padding: 0 8px;
                background: none;
                border: none;
                border-bottom: 1px solid #CCC;
                border-top-right-radius: 0;
                border-top-left-radius: 0;
                border-bottom-right-radius: 0;
                border-bottom-left-radius: 0;
            }
            #adminsettings .BottomTabs > ul .ui-state-default
            {
                background: #3684c5;
                border: medium none;
                border-radius: 0 0 0 0;
                border: 1px solid #19508C;
                box-shadow: 0 1px 0 rgba(255, 255, 255, 0.3) inset, 0 0 4px rgba(255, 255, 255, 0.2) inset;
                margin: 0 0 0 0;
            }
            #adminsettings .BottomTabs > ul li.ui-tabs-active
            {
                border: 1px solid #CCC;
                background: white;
                color: #222;
            }
            #adminsettings .BottomTabs > ul li a
            {
                color: #ffffff;
                font-size: 10px;
                outline: none;
            }
            #adminsettings .BottomTabs > ul li.ui-tabs-active a
            {
                color: #3684c5;
            }
            #adminsettings .BottomTabs > .ui-tabs-panel
            {
                padding: 15px;
            }
            
            /* Boxes */
            #adminsettings .box.gray {
                border: 1px solid #C7C7C7;
                padding:5px;
                margin:5px 0 10px 0;
                background:#efefef;
            }
            
            /* Sections */
            #adminsettings .section {
                position: relative;
            }
            #adminsettings .section .section-header {
                color: #2265BB;
            }
            #adminsettings .section .section-buttons {
                position: absolute;
                top: 5px;
                right: 5px;
            }
            #adminsettings .section .section-buttons .section-button {
                padding-left: 18px;
                height: 16px;
                line-height: 18px;
                font-size: 10px;
                cursor: pointer;
            }
            #adminsettings .section .section-buttons .section-button.add {
                background: transparent url("{!URLFOR($Resource.QueryEditor, 'images/icons/badge-circle-plus-16.png')}") left center no-repeat;
            }
            
            /* Forms */
            #adminsettings table.form td:first-child {
                font-weight: bold;
                padding-right: 15px;
            }
                    
            /* Buttons */
            #adminsettings .buttons {
                padding: 0 10px;
            }        
            #adminsettings .buttons-create {
                padding: 0 10px;
            }        
            #adminsettings .buttons-edit {
                padding: 0 10px;
            }
            #adminsettings .buttons-delete {
                padding: 0 10px;
            }
            #adminsettings .btn {
                width: 70px;
            }
            #adminsettings .btn2 {
                width: 150px;
            }
            
            /* Comboboxes */
            #adminsettings .ui-combobox
            {
                padding-right: 0;
            }
            #adminsettings .ui-combobox input
            {
                background-color: white;
                background: white;
                padding-right: 30px;
                font-weight: bold;
            }
            #adminsettings .ui-combobox a
            {
                background: transparent;
                border: none;
                position: absolute;
                right: 0;
            }
            #adminsettings .ui-combobox a .ui-button-icon-primary
            {
                background: transparent url("{!URLFOR($Resource.QueryEditor, 'images/icons/combobox-arrow-16.png')}") no-repeat center;
            }
            
            .crossobjectoptions input.ui-autocomplete-input {
                width: 300px;
            }
            
            /* Date pickers */
            #adminsettings .ui-datepicker {
                z-index: 9999999999 !important;
            }
            
            /* Create Fields, Buttons, and Workflows Popups */
            /* Edit Page Layouts and List Views Popups */
            #dialog-createfields-table-wrapper th span.link, #dialog-createpurgeworkflows-table-wrapper th span.link, #dialog-deletepurgeworkflows-table-wrapper th span.link, #dialog-addmapitbuttonstolayout-table-wrapper th span.link, #dialog-deletemapitbuttonsfromlayout-table-wrapper th span.link{
            	color: white;
            }
            .createablefield-row .createablefield-exists {
            	text-align: center;
            }
            
            /* Fix jsTree checkbox images */
            .jstree-default .jstree-unchecked > a > .jstree-checkbox:hover {
                background-position: -2px -41px;
            }
            .jstree-default .jstree-checked > a > .jstree-checkbox {
                background-position: -50px -19px;
            }
            .jstree-default .jstree-checked > a > .jstree-checkbox:hover {
                background-position: -50px -41px;
            }
            .jstree-default .jstree-undetermined > a > .jstree-checkbox {
                background-position: -26px -21px;
            }
            .jstree-default .jstree-undetermined > a > .jstree-checkbox:hover {
                background-position: -26px -42px;
            }
            
            /* Temporary fix for header links divider */
            span.divider {
            	float: none;
    			display: inline;
    			background: none;
    			margin: 0;
            }
            .chatter-post-merge-fields td
            {
                color: #757575;
            }
           
        </style>
        
        <c:MA />
        
        <script>       
        	var batchFailures = 0;
    		var requestsOut = 0;
         	var creationFailures = 0;
    		var lastError = '';
    		var statusCode;
    		
    		var SelectedSavedQueries = '';
          
            $(function() { 
                $( "#adminsettings .BottomTabs" ).tabs();
                
                FillBaseObjectComboBoxes();
                
                //comboboxes
                $('body').on('focus', '.ui-autocomplete-input', function () { var $me = $(this); setTimeout(function () {$me.select();}, 100); });
                $('.combobox').combobox();       
                
                //Initialize Saved Query tree popup dialog for Map It
                $( "#dialog-SQTree").dialog({
                    autoOpen: false,
                    height: 600,
                    width: 450,
                    modal: true,
                    resizable:true,
                    buttons: {
                        "Submit": function() {
                            SelectedSavedQueries = '';   
                            var SavedQueries = new Array();
                            $('#SQTree').jstree("get_checked",null,true).each(
                                function(index,element)
                                {
                                    if($(element).attr("nodetype") ===  "PersonalSavedQuery" || $(element).attr("nodetype") ===  "CorporateSavedQuery")
                                    {                                
                                        SavedQueries.push($(element).attr("id"));
                                    }
                                }
                            );
                             
                            SelectedSavedQueries = SavedQueries.join(',');
                            $('#dialog-SQTree').dialog( "close" );
                            BuildMapItURL();
                        },
                         "Cancel": function() {                        
                            $('#dialog-SQTree').dialog( "close" );
                        }
                    }           
                });
                
                //Initialize Saved Query tree for Map It
                $("#SQTree").jstree({
                    "json_data" : {
                        "data": "",
                        "ajax" : {
                            "url" : "/apex/MapAnythingTree2",
                            "data" : function (n) { 
                                
                                return { 
                                    id : n.attr ? n.attr("id") : 0, 
                                    rand : new Date().getTime(),
                                    type: n.attr ? n.attr("NodeType") : 0
                                }; 
                            }
                        }
                    },
                    "types" : {     
                        "types" : {
                            "savedquery" : {
                                "icon" : { 
                                    "image" : "{!URLFOR($Resource.MapAnything, 'jstree/themes/default/d.png')}" 
                                }
                            }
                        }
                    },
                    "core": { 
                        "animation" : 10, 
                        "strings": 
                            {
                                "loading" : "Loading...",
                                "new_node" : "New Folder" 
                            }
                    
                    },
                    "plugins" : ["themes","json_data","ui","crrm","types","checkbox"]
                                    
                }); //End jstree
                
                /* Handle new Base Object onchange event */
                $('#adminsettings select.availableobject').change(function() {                
                    var bObject = $(this).val();
                    if(bObject === '--None--')
                    {
                        $( '#adminsettings .availableobject-settings' ).hide();
                    }
                    else
                    {                    
                        //show loading
                        $('.availableobject-settings .combobox').next().prepend("<div class='loadmask'></div>").find('input').val('Loading...');
    
                        //Populate available fields
                        var processData = { 
                            ajaxResource : 'MAAdminAJAXResources',
                            
            				action	: 'populate_available_fields',
            				object : bObject,
            				type : 'live'
                        };
                        
                        Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                            processData,
                            function(json, event){
                                if(json.success)
                                { 
                                    // address location
                                    var $addressloc = $("select.newbaseobjectdetails[data='addressloc']");
                                    
                                    $addressloc.find('option').remove();        
                                    $('<option></option>').text('--None--').attr('selected',true).appendTo($addressloc);     
                                    
                                    $.each(json.RelationshipFields, function (i, record) 
                                    {
                                        if(record.value === 'SAME')
                                        {
                                            $('<option selected="true"></option>').attr('value', record.value).text(record.name).appendTo($addressloc); 
                                        }
                                        else
                                        {
                                            $('<option></option>').attr('value', record.value).text(record.name).appendTo($addressloc); 
                                        }
                                                           
                                    });
                                    $addressloc.removeAttr('disabled').find('option:first-child').text('--None--');
                                    $addressloc.each(function(i, obj) {                          
                                        $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                    });
                                    $addressloc.combobox();
                                    
                                    
                                    // device fields
                                    var $devicefield = $("select.newbaseobjectdetails[data='devicefield']");
                                    
                                    $devicefield.find('option').remove();        
                                    $('<option></option>').text('--Please Choose--').attr('selected',true).appendTo($devicefield);
                                    
                                    $.each(json.AddressFields, function (i, record) 
                                    {
                                        $('<option></option>').attr('value', record.value).text(record.name).appendTo($devicefield);                
                                    }); 
                                    $devicefield.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);;                          
                                    $devicefield.each(function(i, obj) {                          
                                        $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                    });
                                    $devicefield.combobox();
                                   
                                   
                                    // address fields
                                    var $addressfield = $("select.newbaseobjectdetails[data='addressfield']");
                                    
                                    $addressfield.find('option').remove();        
                                    $('<option value=""></option>').text('--None--').attr('selected',true).appendTo($addressfield);
                                    
                                    $.each(json.AddressFields, function (i, record) 
                                    {
                                        $('<option></option>').attr('value', record.value).text(record.name).appendTo($addressfield);                
                                    }); 
                                    $addressfield.removeAttr('disabled').find('option:first-child').text('--None--').attr('selected',true);                          
                                    $addressfield.each(function(i, obj) {                          
                                        $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                    });
                                    $addressfield.combobox();
        
                                    
                                    // record type fields
                                    var $recordTypeField = $('select.newbaseobjectdetails[data="recordtypefield"]');
                                    $recordTypeField.find('option:not(:first-child)').remove();
                                    $.each(json.RecordTypes, function (i, record) 
                                    {
                                        $('<option></option>').attr('value', record.value).text(record.name).appendTo($recordTypeField);
                                    }); 
                                    $recordTypeField.removeAttr('disabled').find('option:first-child').text('--All--').attr('selected',true);                          
                                    $recordTypeField.each(function(i, obj) {
                                        $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                    });
                                    $recordTypeField.combobox();
        
                                    var $datetimeField = $('select.newbaseobjectdetails[data="datetime"]');
                                    $datetimeField.find('option:not(:first-child)').remove();
                                    $.each(json.DatetimeFields, function (i, record)
                                    {
                                        $('<option></option>').attr('value', record.value).text(record.name).appendTo($datetimeField);
                                    });
                                    $datetimeField.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);                          
                                    $datetimeField.each(function(i, obj) {                          
                                        $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                    });
                                    $datetimeField.combobox();
        
                                    var $booleanField = $('select.newbaseobjectdetails[data="boolean"]');
                                    $booleanField.find('option:not(:first-child)').remove();
                                    $.each(json.BooleanFields, function (i, record)
                                    {
                                        $('<option></option>').attr('value', record.value).text(record.name).appendTo($booleanField);
                                    });
                                    $booleanField.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);                          
                                    $booleanField.each(function(i, obj) {                          
                                        $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                    });
                                    $booleanField.combobox();
                                    
                                    //Check In Settings
                                    $('.newbaseobjectdetails .checkin-postto').val('Chatter|Task').next().find('input').val('Chatter & Task');
                                    $('.newbaseobjectdetails .chatter-body').val('Check In @ {tooltip1} ({distance} meters from destination, {lat} / {long})');
                                    $('.newbaseobjectdetails .verification-distance').val('');
                                    $('.newbaseobjectdetails .verification-unit').val('ft').next().find('input').val('Feet');
                                    $('.newbaseobjectdetails .verification-required').attr('checked', false);
                                    
                                    var $coordinatefield = $("select.newbaseobjectdetails[data='coordinatefield']");
                                    $coordinatefield.find('option:not(:first-child)').remove();                    
                                    $.each(json.CoordinateFields, function (i, record) 
                                    {
                                        $('<option></option>').attr('value', record.value).text(record.name).appendTo($coordinatefield);                
                                    }); 
                                    $coordinatefield.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);
                                    $coordinatefield.each(function(i, obj) {                          
                                        $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                    });
                                    $coordinatefield.combobox();
                                    
                                    var $qualityfield = $("select.newbaseobjectdetails[data='qualityfield']");
                                    $qualityfield.find('option:not(:first-child)').remove();                    
                                    $.each(json.QualityFields, function (i, record) 
                                    {
                                        $('<option></option>').attr('value', record.value).text(record.name).appendTo($qualityfield);                
                                    }); 
                                    $qualityfield.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);
                                    $qualityfield.each(function(i, obj) {                          
                                        $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                    });
                                    $qualityfield.combobox();
                                    
                                    var $similarityfield = $("select.newbaseobjectdetails[data='similarityfield']");
                                    $similarityfield.find('option:not(:first-child)').remove();                    
                                    $.each(json.SimilarityFields, function (i, record) 
                                    {
                                        $('<option></option>').attr('value', record.value).text(record.name).appendTo($similarityfield);                
                                    }); 
                                    $similarityfield.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);                            
                                    $similarityfield.each(function(i, obj) {                          
                                        $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                    });
                                    $similarityfield.combobox();
                                    
                                    //hide loading
                                    $('.availableobject-settings .combobox').next().find('input').closest('.ui-combobox').find('.loadmask').remove();
                                    
                                    $('#adminsettings .buttons-create').show();
                                }
                                else
                                {
                                    $('#adminsettings .buttons-create .msgs').html('<b>Error retrieving Available fields</b>: Please try again').show();
                                }
                            },{buffer:false,escape:false}
                        );
                        
                        $( '#adminsettings .availableobject-settings' ).show();
                    }
                });
                
                /* Handle new Base Object Address location onchange event */
                $("select.newbaseobjectdetails[data='addressloc']").change(function() { 
                    //show loading
                    $('.availableobject-settings .combobox:not([data="addressloc"])').next().prepend("<div class='loadmask'></div>").find('input').val('Loading...');
                    
                    var AddressLocation = $(this).val();
                    var bObject = $('#adminsettings select.availableobject').val();
                    
                    //Repopulate available objects  (due to Address Location change)
                    var processData = { 
                        ajaxResource : 'MAAdminAJAXResources',
                        
        				action	: 'repopulate_available_fields',
        				object : bObject,
        				addressloc : AddressLocation
                    };
                    
                    Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                        processData,
                        function(json, event){
                            if(json.success)
                            { 
                                // device fields
                                var $devicefield = $("select.newbaseobjectdetails[data='devicefield']");
                                
                                $devicefield.find('option').remove();        
                                $('<option></option>').text('--Please Choose--').attr('selected',true).appendTo($devicefield);   
                                
                                $.each(json.AddressFields, function (i, record) 
                                {
                                    $('<option></option>').attr('value', record.value).text(record.name).appendTo($devicefield);                
                                }); 
                                $devicefield.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);
                                $devicefield.each(function(i, obj) {                          
                                    $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                });
                                
                                
                                // address fields
                                var $addressfield = $("select.newbaseobjectdetails[data='addressfield']");
                                
                                $addressfield.find('option').remove();        
                                $('<option value=""></option>').text('--None--').attr('selected',true).appendTo($addressfield);
                                
                                $.each(json.AddressFields, function (i, record) 
                                {
                                    $('<option></option>').attr('value', record.value).text(record.name).appendTo($addressfield);                
                                }); 
                                $addressfield.removeAttr('disabled').find('option:first-child').text('--None--').attr('selected',true);
                                $addressfield.each(function(i, obj) {                          
                                    $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                });
        
                                //record types
                                var $recordTypeField = $('select.newbaseobjectdetails[data="recordtypefield"]');
                                $recordTypeField.find('option:not(:first-child)').remove();
                                $.each(json.RecordTypes, function (i, record) 
                                {
                                    $('<option></option>').attr('value', record.value).text(record.name).appendTo($recordTypeField);                
                                }); 
                                $recordTypeField.removeAttr('disabled').find('option:first-child').text('--All--').attr('selected',true);                          
                                $recordTypeField.each(function(i, obj) {
                                    $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                });
        
                                var $datetimeField = $('select.newbaseobjectdetails[data="datetime"]');
                                $datetimeField.find('option:not(:first-child)').remove();
                                $.each(json.DatetimeFields, function (i, record)
                                {
                                    $('<option></option>').attr('value', record.value).text(record.name).appendTo($datetimeField);
                                });
                                $datetimeField.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);                          
                                $datetimeField.each(function(i, obj) {                          
                                    $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                });
        
                                var $booleanField = $('select.newbaseobjectdetails[data="boolean"]');
                                $booleanField.find('option:not(:first-child)').remove();
                                $.each(json.BooleanFields, function (i, record)
                                {
                                    $('<option></option>').attr('value', record.value).text(record.name).appendTo($booleanField);
                                });
                                $booleanField.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);                          
                                $booleanField.each(function(i, obj) {                          
                                    $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                });
                                
                                var $coordinatefield = $("select.newbaseobjectdetails[data='coordinatefield']");
                                $coordinatefield.find('option:not(:first-child)').remove();              
                                $.each(json.CoordinateFields, function (i, record) 
                                {
                                    $('<option></option>').attr('value', record.value).text(record.name).appendTo($coordinatefield);                
                                }); 
                                $coordinatefield.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);
                                $coordinatefield.each(function(i, obj) {                          
                                    $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                });
                                
                                var $qualityfield = $("select.newbaseobjectdetails[data='qualityfield']");
                                $qualityfield.find('option:not(:first-child)').remove();                
                                $.each(json.QualityFields, function (i, record) 
                                {
                                    $('<option></option>').attr('value', record.value).text(record.name).appendTo($qualityfield);                
                                }); 
                                $qualityfield.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);
                                $qualityfield.each(function(i, obj) {                          
                                    $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                });
                                
                                var $similarityfield = $("select.newbaseobjectdetails[data='similarityfield']");
                                $similarityfield.find('option:not(:first-child)').remove();              
                                $.each(json.SimilarityFields, function (i, record) 
                                {
                                        $('<option></option>').attr('value', record.value).text(record.name).appendTo($similarityfield);                
                                }); 
                                $similarityfield.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);
                                $similarityfield.each(function(i, obj) {                          
                                    $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                });
                                
                                //Check In Settings
                                $('.newbaseobjectdetails .checkin-postto').val('Chatter|Task').next().find('input').val('Chatter & Task');
                                $('.newbaseobjectdetails .chatter-body').val('Check In @ {tooltip1} ({distance} meters from destination, {lat} / {long})');
                                $('.newbaseobjectdetails .verification-distance').val('');
                                $('.newbaseobjectdetails .verification-unit').val('ft').next().find('input').val('Feet');
                                $('.newbaseobjectdetails .verification-required').attr('checked', false);
                                    
                                //hide loading
                                $('.availableobject-settings .combobox:not([data="addressloc"])').next().find('.loadmask').remove();
                                
                                $('#adminsettings .buttons-create').show();
                            }
                            else
                            {
                                $('#adminsettings .buttons-create .msgs').html('<b>Error retrieving Available fields</b>: Please try again').show();
                            }
                        },{buffer:false,escape:false}
                    );
                    
                });
    
                $('#adminsettings').on('change','.editbaseobjectdetails[data="addressfield"]',function() {
                    var thisId = $(this).attr('id');
                    var thisVal = $(this).val();
                    //loop over select options
                    $('#adminsettings .editbaseobjectdetails[data="addressfield"]').each(function(i,row) {
                        var val = $(row).val();
                        var rowId = $(row).attr('id');
                        if(val != '--Please Choose--' && thisId != rowId) {
                            if(thisVal == val) {
                                $('#warningBox.edit').show();
                                return false;
                            }
                            else {
                                $('#warningBox.edit').hide();
                            }
                        }
                    });
                });
                
                /* Handle edit Base Object onchange event */
                $('#adminsettings select.baseobject').change(function() {
                    //show loading
                    $('.baseobject-settings .combobox').next().prepend("<div class='loadmask'></div>").find('input').val('Loading...');
                                    
                    var bObject = $(this).val();
                    if(bObject === '--None--')
                    {
                        $( '#adminsettings .baseobject-settings' ).hide();
                    }
                    else
                    {
                        //Populate available fields and query existing Base Object
                        var processData = { 
                            ajaxResource : 'MAAdminAJAXResources',
                            
            				action	: 'get_existing_object',
            				object : bObject,
            				type: 'live',
                        };
                        
                        Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                            processData,
                            function(json, event){
                                if(json.success)
                                {   
                                	//namespace removal
                                	removeNamespace('{!namespace}', json.BaseObject);
                                
                                    //Set Read-Only Base Object output
                                    $("span.readonlybaseobject").html('<b>' + json.BaseObject.Name + '</b>');
                                    
                                    
                                    // populate device origin combobox
                                    var $addressloc = $("select.editbaseobjectdetails[data='addressloc']");
                                    $addressloc.find('option').remove();
                                    $('<option></option>').attr('value', '').text('Loading...').appendTo($addressloc);                      
                                    $.each(json.RelationshipFields, function (i, record) 
                                    {
                                        
                                        if(record.value === json.BaseObject.AddressObject__c)
                                        {
                                            $('<option selected="true"></option>').attr('value', record.value).text(record.name).appendTo($addressloc);
        
                                        }
                                        else
                                        {
                                            $('<option></option>').attr('value', record.value).text(record.name).appendTo($addressloc);
                                        }
                                                        
                                    }); 
                                    $addressloc.removeAttr('disabled').find('option:first-child').remove();
                                    //Set default value(s)
                                    $addressloc.each(function(i, obj) {                          
                                        $(this).next().find('.ui-autocomplete-input').val($addressloc.find('option:selected').text());                         
                                    });
                                    $addressloc.combobox();
                                    
                                    
                                    // populate record type combo box
                                    var $recordTypeEditCombo = $("select.editbaseobjectdetails[data='recordtypefield']");
                                    // $recordTypeEditCombo.find('option').remove();
                                    $('<option></option>').attr('value', '').text('Loading...').appendTo($recordTypeEditCombo);                      
                                    $.each(json.RecordTypes, function (i, record) 
                                    {
                                        $('<option></option>').attr('value', record.value).text(record.name).appendTo($recordTypeEditCombo);
                                    }); 
                                    $recordTypeEditCombo.removeAttr('disabled').find('option:first-child').remove();
                                    $recordTypeEditCombo.next().find('.ui-autocomplete-input').val($recordTypeEditCombo.find('option:first-child').text());
        
        
                                    // populate device fields combobox
                                    var $devicefield = $("select.editbaseobjectdetails[data='devicefield']");
                                    
                                    $devicefield.find('option').remove();        
                                    $('<option></option>').text('--Please Choose--').attr('selected',true).appendTo($devicefield);
                                    
                                    $.each(json.AddressFields, function (i, record) 
                                    {
                                        $('<option></option>').attr('value', record.value).text(record.name).appendTo($devicefield);    
        
                                    }); 
                                    $devicefield.removeAttr('disabled').find('option:first-child').text('--Please Choose--'); 
                                    $devicefield.combobox();
                                    
                                    
                                    // populate address fields combobox
                                    var $addressfield = $("select.editbaseobjectdetails[data='addressfield']");
                                    $addressfield.find('option').remove();        
                                    $('<option value=""></option>').text('--None--').attr('selected',true).appendTo($addressfield);
                                    
                                    $.each(json.AddressFields, function (i, record) 
                                    {
                                        $('<option></option>').attr('value', record.value).text(record.name).appendTo($addressfield);    
        
                                    }); 
                                    $addressfield.removeAttr('disabled').find('option:first-child').text('--None--'); 
                                    $addressfield.combobox();
                                  
                                  
                                    //record types
                                    var $recordTypeField = $('select.editbaseobjectdetails[data="recordtypefield"]');
                                    $recordTypeField.find('option').remove();
                                    $('<option></option>').text('--All--').attr('selected',true).appendTo($recordTypeField);
                                    $.each(json.RecordTypes, function (i, record) 
                                    {
                                        if(record.value === json.BaseObject.sma__RecordTypeId__c)
                                        {
                                            $('<option selected="true"></option>').attr('value', record.value).text(record.name).appendTo($recordTypeField); 
                                        }
                                        else
                                        {
                                            $('<option></option>').attr('value', record.value).text(record.name).appendTo($recordTypeField); 
                                        }
                                    }); 
                                    $recordTypeField.removeAttr('disabled').find('option:first-child').text('--All--');
                                    
                                    
                                    //Set device fields comboboxes default value(s)
                                    // load device fields data
                                    $('#adminsettings input.editname').val(json.BaseObject.Name__c).next().find('.ui-autocomplete-input').val(json.BaseObject.Name__c);
                                    $('#editrecordtype').val(json.BaseObject.RecordTypeId__c).next().find('.ui-autocomplete-input').val($('#editrecordtype option:selected').text());
                                    $('#editdeviceid').val(json.BaseObject.DeviceId__c).next().find('.ui-autocomplete-input').val($('#editdeviceid option:selected').text());
                                    $('#editdevicetype').val(json.BaseObject.DeviceType__c).next().find('.ui-autocomplete-input').val($('#editdevicetype option:selected').text());
                                    $('#editdevicevendor').val(json.BaseObject.DeviceVendor__c).next().find('.ui-autocomplete-input').val($('#editdevicevendor option:selected').text());
                                    
                                    // load address fields data
                                    $('#editstreet').val(json.BaseObject.Street__c).next().find('.ui-autocomplete-input').val($('#editstreet option:selected').text());
                                    $('#editcity').val(json.BaseObject.City__c).next().find('.ui-autocomplete-input').val($('#editcity option:selected').text());
                                    $('#editstate').val(json.BaseObject.State__c).next().find('.ui-autocomplete-input').val($('#editstate option:selected').text());
                                    $('#editpostalcode').val(json.BaseObject.PostalCode__c).next().find('.ui-autocomplete-input').val($('#editpostalcode option:selected').text());
                                    $('#editcountry').val(json.BaseObject.Country__c).next().find('.ui-autocomplete-input').val($('#editcountry option:selected').text());
                                      
                                    
                                    //check in settings
                                    try { 
                                    	var settings = JSON.parse(json.BaseObject.Settings__c);
                                    	$('.editbaseobjectdetails .checkin-postto').val(settings.CheckInPostTo).next().find('input').val($('.editbaseobjectdetails .checkin-postto').find('option:selected').text());
                                    	$('.editbaseobjectdetails .chatter-body').val(settings.ChatterBody || 'Check In @ {tooltip1} ({distance} meters from destination, {lat} / {long})');
                                    	$('.editbaseobjectdetails .verification-distance').val(settings.VerificationDistance);
                                   		$('.editbaseobjectdetails .verification-unit').val(settings.VerificationUnit).next().find('input').val($('.editbaseobjectdetails .verification-unit').find('option:selected').text());
                                   		$('.editbaseobjectdetails .verification-required').attr('checked', settings.VerificationRequired ? 'checked' : false);
                                    } 
                                    catch (err) { 
                                    	$('.editbaseobjectdetails .checkin-postto').val('Chatter|Task').next().find('input').val($('.editbaseobjectdetails .checkin-postto').find('option:selected').text());
                                    	$('.editbaseobjectdetails .chatter-body').val('Check In @ {tooltip1} ({distance} meters from destination, {lat} / {long})');
                                    	$('.editbaseobjectdetails .verification-distance').val('');
                                   		$('.editbaseobjectdetails .verification-unit').val('ft').next().find('input').val($('.editbaseobjectdetails .verification-unit').find('option:selected').text());
                                   		$('.editbaseobjectdetails .verification-required').attr('checked', false);
                                    }
        
                                    //hide loading
                                    $('.baseobject-settings .combobox').next().find('input').closest('.ui-combobox').find('.loadmask').remove();
                                    
                                    $('#adminsettings .buttons-edit').show();
                                }
                                else
                                {
                                    $('#adminsettings .buttons-edit .msgs').html('<b>Error retrieving Available fields</b>: Please try again').show();
                                }
                            },{buffer:false,escape:false}
                        );
                        
                        $( '#adminsettings .baseobject-settings' ).show();
                    }
                });
                
                /* Handle edit Base Object Address location onchange event */
                $("select.editbaseobjectdetails[data='addressloc']").change(function() { 
                    //show loading
                    $('.baseobject-settings .combobox:not([data="addressloc"])').next().prepend("<div class='loadmask'></div>").find('input').val('Loading...');
                    
                    var AddressLocation = $(this).val();
                    var bObject = $('#adminsettings select.baseobject').val();
                    
                    //Repopulate available objects  (due to Address Location change)
                    var processData = { 
                        ajaxResource : 'MAAdminAJAXResources',
                        
        				action	: 'repopulate_edit_available_fields',
        				object : bObject,
        				addressloc : AddressLocation
                    };
                    
                    Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                        processData,
                        function(json, event){
                            if(json.success)
                            {   
                                // repopulate device fields
                                var $devicefield = $("select.editbaseobjectdetails[data='devicefield']");
                                
                                $devicefield.find('option').remove();        
                                $('<option></option>').text('--Please Choose--').attr('selected',true).appendTo($devicefield);   
                                
                                $.each(json.AddressFields, function (i, record) 
                                {
                                    $('<option></option>').attr('value', record.value).text(record.name).appendTo($devicefield);                
                                }); 
                                $devicefield.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);
                                $devicefield.each(function(i, obj) {                          
                                    $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                });
                                
                                
                                // repopulate address fields
                                var $addressfield = $("select.editbaseobjectdetails[data='addressfield']");
                                
                                $addressfield.find('option').remove();        
                                $('<option value=""></option>').text('--None--').attr('selected',true).appendTo($addressfield);   
                                
                                $.each(json.AddressFields, function (i, record) 
                                {
                                    $('<option></option>').attr('value', record.value).text(record.name).appendTo($addressfield);                
                                }); 
                                $addressfield.removeAttr('disabled').find('option:first-child').text('--None--').attr('selected',true);
                                $addressfield.each(function(i, obj) {                          
                                    $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                });
                                
                                
                                // coordinate fields
                                var $coordinatefield = $("select.editbaseobjectdetails[data='coordinatefield']");
                                $coordinatefield.find('option:not(:first-child)').remove();              
                                $.each(json.CoordinateFields, function (i, record) 
                                {
                                    $('<option></option>').attr('value', record.value).text(record.name).appendTo($coordinatefield);                
                                }); 
                                $coordinatefield.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);
                                $coordinatefield.each(function(i, obj) {                          
                                    $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                });
                                
                                var $qualityfield = $("select.editbaseobjectdetails[data='qualityfield']");
                                $qualityfield.find('option:not(:first-child)').remove();                
                                $.each(json.QualityFields, function (i, record) 
                                {
                                    $('<option></option>').attr('value', record.value).text(record.name).appendTo($qualityfield);                
                                }); 
                                $qualityfield.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);
                                $qualityfield.each(function(i, obj) {                          
                                    $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                });
                                
                                var $similarityfield = $("select.editbaseobjectdetails[data='similarityfield']");
                                $similarityfield.find('option:not(:first-child)').remove();              
                                $.each(json.SimilarityFields, function (i, record) 
                                {
                                        $('<option></option>').attr('value', record.value).text(record.name).appendTo($similarityfield);                
                                }); 
                                $similarityfield.removeAttr('disabled').find('option:first-child').text('--Please Choose--').attr('selected',true);
                                $similarityfield.each(function(i, obj) {                          
                                    $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                });
                                
                                // record type fields
                                var $recordTypeFieldRepopulate = $("select.editbaseobjectdetails[data='recordtypefield']");
                                $recordTypeFieldRepopulate.find('option').remove();
                                $('<option></option>').text('--All--').attr('selected',true).appendTo($recordTypeFieldRepopulate);
                                $.each(json.RecordTypes, function (i, record) 
                                {
                                        $('<option></option>').attr('value', record.value).text(record.name).appendTo($recordTypeFieldRepopulate);                
                                }); 
                                $recordTypeFieldRepopulate.removeAttr('disabled'); //find('option:first-child').text('--All--').attr('selected',true);
                                $recordTypeFieldRepopulate.each(function(i, obj) {                          
                                    $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                                });
                                
                                
                                //check in settings
                                $('.editbaseobjectdetails .checkin-postto').val('Chatter|Task').next().find('input').val('Chatter & Task');
                                $('.editbaseobjectdetails .chatter-body').val('Check In @ {tooltip1} ({distance} meters from destination, {lat} / {long})');
                                $('.editbaseobjectdetails .verification-distance').val('');
                                $('.editbaseobjectdetails .verification-unit').val('ft').next().find('input').val('Feet');
                                $('.editbaseobjectdetails .verification-required').attr('checked', false);
                                    
                                    
                                //hide loading
                                $('.baseobject-settings .combobox:not([data="addressloc"])').next().find('.loadmask').remove();
                                
                                $('#adminsettings .buttons-edit').show();
                            }
                            else
                            {
                                $('#adminsettings .buttons-edit .msgs').html('<b>Error retrieving Available fields</b>: Please try again').show();
                            }
                        },{buffer:false,escape:false}
                    );
                    
                });
                
                /* Handle remove Base Object onchange event */
                $('#adminsettings select.deletebaseobject').change(function() {                
                    var Object = $(this).val();
                    if(Object === '--None--')
                    {
                        $('#adminsettings .buttons-delete').hide();
                    }
                    else
                    {
                        $('#adminsettings .buttons-delete').show();
                    }
                });
                
                //handle button type onchange event
                $('#buttonType').change(function() {
                	if($('#buttonType').val() == 'massActionButton')
               		{
    	           		$('.buttonLayouts').hide();
    	           		$('.massActionLayouts').show();
    	           	}
    	           	else if($('#buttonType').val() == 'button')
               		{
    	           		$('.buttonLayouts').show();
    	           		$('.massActionLayouts').hide();
    	           	}
    	        });
                
                //handle selecting all/none when adding map it buttons to page layouts, creating workflows or creating fields
                $('#dialog-addmapitbuttonstolayout-table-wrapper th span.link, #dialog-createpurgeworkflows-table-wrapper th span.link, #dialog-createfields-table-wrapper th span.link').click(function () {
                	if ($(this).is('.selectall')) {
                		$('input.createablefield-create').attr('checked', 'checked');
                	}
                	else if ($(this).is('.selectnone')) {
                		$('input.createablefield-create').attr('checked', false);
                	}
                });
                
                //handle creating purge workflow field updates
                $('#adminsettings .buttons-create .createpurgeworkflowsbtn, #adminsettings .buttons-edit .createpurgeworkflowsbtn').click(function () 
                {
                	var baseObject = $(this).is('.buttons-create .createpurgeworkflowsbtn') ? $('#BottomTabs-1 .availableobject').val() : $('.editbaseobjectdetails.readonlybaseobject b').text();
                	
                	//show loading
                	launchPopup($('#dialog-createpurgeworkflows'), {
                		minWidth: '600px',
                		buttons: {
                			'Create': function () {
                			
                				//show loading
                				var $dialog = showLoading($(this).closest('.ui-dialog'), 'Creating...');
                				
                				//get the fields that we want to update
                				var fieldsToUpdate = [];
                				if ($('#editlatitude').val() != '--Please Choose--') {
                					fieldsToUpdate.push($('#editlatitude').val());
                				}
                				if ($('#editlongitude').val() != '--Please Choose--') {
                					fieldsToUpdate.push($('#editlongitude').val());
                				}
    
                				//create the lat/long field updates
    			   				var requestData = {
    			   					action			: 'create_workflowFieldUpdates',
    							    baseObject		: baseObject,
    							    fieldsToUpdate	: JSON.stringify(fieldsToUpdate)				
    			   				};
    			   				
    			   				requestData.ajaxResource = 'MAAdminAJAXResources';
                                
                                Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                                    requestData,
                                    function(response, event){
        			   					if(!response.success) 
        			   					{ 
        			   						showError($dialog, response.errorMessage);
        			   						return; 
        			   					}
        			   					else
        			   					{
        			   						//get a list of ids that were returned (these are process ids that can be used to get the status of the request)
        			                		var resultIds = [];
        			                		$.each((response.results || []), function (index, result) {
        			                			resultIds.push(result.substring(result.indexOf('<id>') + 4, result.indexOf('</id>')));
        			                		});
        			                		
        			                		checkMetadata(resultIds, $dialog, 'FieldUpdate', baseObject);
        			   					}
                                    },{buffer:false,escape:false}
    			   				);
                			},
    						'Close': function () { 
    							hidePopup($('#dialog-createpurgeworkflows')); 
    						}
    					}
                	});
                	
                	loadCreateableWorkflows(baseObject);
                });
                
                //handle creating fields
                $('#adminsettings .buttons-create .createfieldsbtn, #adminsettings .buttons-edit .createfieldsbtn').click(function () 
                {
                	var baseObject = $(this).is('.buttons-create .createfieldsbtn') ? $('#BottomTabs-1 .availableobject').val() : $('.editbaseobjectdetails.readonlybaseobject b').text();
                	
                	//show loading
                	launchPopup($('#dialog-createfields'), {
                		minWidth: '600px',
                		buttons: {
                			'Create': function () {
                			
                				var fieldRequests = [];
                				
                				//show loading
                				var $dialog = showLoading($(this).closest('.ui-dialog'), 'Creating...');
                				
                				//create fields function
                				CreateBaseObjectFields({
                					baseObject: baseObject,
                					fieldRequests: fieldRequests,
                					complete: function (response) {
                						if (response.success) {
                							//reload fields and drop down boxes
                							loadCreateableFields(baseObject);
    		                				$('#BottomTabs-1 .availableobject').change();
    		                				$('#BottomTabs-2 .baseobject').change();
    		                				$('.suggestbtn').click();
                							
                							//hide loading
                							hideMessage($dialog);
                						}
                					}
                				});
                			},
    						'Close': function () { 
    							hidePopup($('#dialog-createfields')); 
    						}
    					}
                	});
                	
                	loadCreateableFields(baseObject);
                });
                
                //Suggest fields
                $('#adminsettings .buttons-create .suggestbtn, #adminsettings .buttons-edit .suggestbtn').click(function () 
                {
                	var prefix = $(this).is('.buttons-create .suggestbtn') ? 'create' : 'edit';
                	
                    //Handle regular address fields
                    $('#'+prefix+'street > option').each(function() {
                        var FieldNameLowered = this.value.toLowerCase();                    
                        if (FieldNameLowered.indexOf('street') !== -1 && !FieldNameLowered.indexOf('clean') !== -1 && ($('#'+prefix+'street').val() == '--Please Choose--' || $('#'+prefix+'street').val() == ''))
                        {
                           $('#'+prefix+'street').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }                   
                        else if (FieldNameLowered.indexOf('city') !== -1 && !FieldNameLowered.indexOf('clean') !== -1 && ($('#'+prefix+'city').val() == '--Please Choose--' || $('#'+prefix+'city').val() == ''))
                        {
                           $('#'+prefix+'city').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }
                        else if (FieldNameLowered.indexOf('state') !== -1 && !FieldNameLowered.indexOf('clean') !== -1 && ($('#'+prefix+'state').val() == '--Please Choose--' || $('#'+prefix+'state').val() == ''))
                        {
                           $('#'+prefix+'state').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }
                        else if (FieldNameLowered.indexOf('postalcode') !== -1 && !FieldNameLowered.indexOf('clean') !== -1 && ($('#'+prefix+'postalcode').val() == '--Please Choose--' || $('#'+prefix+'postalcode').val() == ''))
                        {
                           $('#'+prefix+'postalcode').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }
                        else if (FieldNameLowered.indexOf('country') !== -1 && !FieldNameLowered.indexOf('clean') !== -1 && ($('#'+prefix+'country').val() == '--Please Choose--' || $('#'+prefix+'country').val() == ''))
                        {
                           $('#'+prefix+'country').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }
                    });
                    
                    //Handle Coordinate fields
                    $('#'+prefix+'latitude > option').each(function() {
                        var FieldNameLowered = this.value.toLowerCase();
                        if (FieldNameLowered.indexOf('latitude') !== -1 && FieldNameLowered.indexOf('verified') !== -1 && ($('#'+prefix+'verifiedlatitude').val() == '--Please Choose--' || $('#'+prefix+'verifiedlatitude').val() == ''))
                        {
                           $('#'+prefix+'verifiedlatitude').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }
                        else if (FieldNameLowered.indexOf('longitude') !== -1 && FieldNameLowered.indexOf('verified') !== -1 && ($('#'+prefix+'verifiedlongitude').val() == '--Please Choose--' || $('#'+prefix+'verifiedlongitude').val() == ''))
                        {
                           $('#'+prefix+'verifiedlongitude').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }
                        else if (FieldNameLowered.indexOf('latitude') !== -1 && ($('#'+prefix+'latitude').val() == '--Please Choose--' || $('#'+prefix+'latitude').val() == ''))
                        {
                           $('#'+prefix+'latitude').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }
                        else if (FieldNameLowered.indexOf('longitude') !== -1 && ($('#'+prefix+'longitude').val() == '--Please Choose--' || $('#'+prefix+'longitude').val() == ''))
                        {
                           $('#'+prefix+'longitude').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }                    
                    });
                    
                    //Handle clean address fields
                    $('#'+prefix+'cleanstreet > option').each(function() {
                        var FieldNameLowered = this.value.toLowerCase();                    
                        if (FieldNameLowered.indexOf('street') !== -1 && FieldNameLowered.indexOf('clean') !== -1 && ($('#'+prefix+'cleanstreet').val() == '--Please Choose--' || $('#'+prefix+'cleanstreet').val() == ''))
                        {
                           $('#'+prefix+'cleanstreet').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }                   
                        else if (FieldNameLowered.indexOf('city') !== -1 && FieldNameLowered.indexOf('clean') !== -1 && ($('#'+prefix+'cleancity').val() == '--Please Choose--' || $('#'+prefix+'cleancity').val() == ''))
                        {
                           $('#'+prefix+'cleancity').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }
                        else if (FieldNameLowered.indexOf('state') !== -1 && FieldNameLowered.indexOf('clean') !== -1 && ($('#'+prefix+'cleanstate').val() == '--Please Choose--' || $('#'+prefix+'cleanstate').val() == ''))
                        {
                           $('#'+prefix+'cleanstate').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }
                        else if ((FieldNameLowered.indexOf('postalcode') !== -1 || (FieldNameLowered.indexOf('postal') !== -1 && FieldNameLowered.indexOf('code') !== -1)) && FieldNameLowered.indexOf('clean') !== -1 && ($('#'+prefix+'cleanzip').val() == '--Please Choose--' || $('#'+prefix+'cleanzip').val() == ''))
                        {
                           $('#'+prefix+'cleanzip').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }
                        else if (FieldNameLowered.indexOf('country') !== -1 && FieldNameLowered.indexOf('clean') !== -1 && ($('#'+prefix+'cleancountry').val() == '--Please Choose--' || $('#'+prefix+'cleancountry').val() == ''))
                        {
                           $('#'+prefix+'cleancountry').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }
                        else if (FieldNameLowered.indexOf('county') !== -1 && FieldNameLowered.indexOf('clean') !== -1 && ($('#'+prefix+'cleancounty').val() == '--Please Choose--' || $('#'+prefix+'cleancounty').val() == ''))
                        {
                           $('#'+prefix+'cleancounty').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }
                        else if (FieldNameLowered.indexOf('district') !== -1 && FieldNameLowered.indexOf('clean') !== -1 && ($('#'+prefix+'cleandistrict').val() == '--Please Choose--' || $('#'+prefix+'cleandistrict').val() == ''))
                        {
                           $('#'+prefix+'cleandistrict').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }
                    });    
                    
                    //Handle Quality fields
                    $('#'+prefix+'quality > option').each(function() {
                        var FieldNameLowered = this.value.toLowerCase();                    
                        if (FieldNameLowered.indexOf('quality') !== -1 && ($('#'+prefix+'quality').val() == '--Please Choose--' || $('#'+prefix+'quality').val() == ''))
                        {
                           $('#'+prefix+'quality').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }                 
                    });
                    
                    //Handle Similarity fields
                    $('#'+prefix+'similarity > option').each(function() {
                        var FieldNameLowered = this.value.toLowerCase();                    
                        if (FieldNameLowered.indexOf('similarity') !== -1 && ($('#'+prefix+'similarity').val() == '--Please Choose--' || $('#'+prefix+'similarity').val() == ''))
                        {
                           $('#'+prefix+'similarity').val(this.value).next().find('.ui-autocomplete-input').val(this.text);
                        }                 
                    });                        
                });
                
                /*****************
                * Map It Functions
                ******************/
    
                /****************************
                *  DML Ajax Handler Functions
                ****************************/            
                
                //Handle Create New Save
                $('#adminsettings .buttons-create .savebtn').click(function () 
                {
                    //build settings objects
                    var settings = {
                    	CheckInPostTo			: $('.newbaseobjectdetails .checkin-postto').val(),
                    	ChatterBody				: $('.newbaseobjectdetails .chatter-body').val(),
                    	VerificationDistance	: $('.newbaseobjectdetails .verification-distance').val(),
                    	VerificationUnit		: $('.newbaseobjectdetails .verification-unit').val(),
                    	VerificationRequired	: $('.newbaseobjectdetails .verification-required').is(':checked')
                    };
                    
                    var badBaseObjectValRegex = /(--)|(\.\.)/ig; // matches any textt with --text-- or Loading...
                    
                    var BaseObject = {
                        DeviceId__c :              badBaseObjectValRegex.test($('#createdeviceid').val() || '')             ? null : $('#createdeviceid').val().trim(),
                        DeviceType__c :            badBaseObjectValRegex.test($('#createdevicetype').val() || '')           ? null : $('#createdevicetype').val().trim(),
                        DeviceVendor__c :          badBaseObjectValRegex.test($('#createdevicevendor').val() || '')         ? null : $('#createdevicevendor').val().trim(),
                        
                        RecordTypeId__c:           $('#createrecordtype').val(),
                        
                        AddressObject__c:           badBaseObjectValRegex.test($("select.newbaseobjectdetails[data='addressloc").val() || '..') ? null : $("select.newbaseobjectdetails[data='addressloc").val().trim(),
                        
                        Name__c :                   typeof $('#adminsettings input.createname').val() == 'string'          ? $('#adminsettings input.createname').val().trim()       : null,
                        Name :                      typeof $('#adminsettings .availableobject').val() == 'string'          ? $('#adminsettings .availableobject').val().trim()       : null,
                        Description__c :            typeof $('#adminsettings #createdescription').val() == 'string'        ? $('#adminsettings #createdescription').val().trim()     : null,
                        
                        // address fields
                        Street__c:                  badBaseObjectValRegex.test($('#createstreet').val() || '')         ? null : $('#createstreet').val().trim(),
                        City__c:                    badBaseObjectValRegex.test($('#createcity').val() || '')           ? null : $('#createcity').val().trim(),
                        State__c:                   badBaseObjectValRegex.test($('#createstate').val() || '')          ? null : $('#createstate').val().trim(),
                        PostalCode__c:              badBaseObjectValRegex.test($('#createpostalcode').val() || '')     ? null : $('#createpostalcode').val().trim(),
                        Country__c:                 badBaseObjectValRegex.test($('#createcountry').val() || '')        ? null : $('#createcountry').val().trim(),
                        
                        Type__c :                   'Live',
                        Settings__c : 			    JSON.stringify(settings)
                    };
                    
                    //
                    if
                     (  BaseObject.Type__c             &&    typeof BaseObject.Type__c == 'string'                &&     String(BaseObject.Type__c).trim() == 'Live' && 
                        BaseObject.Name                &&    typeof BaseObject.Name == 'string'                   &&     String(BaseObject.Name).trim() != '' && 
                        BaseObject.Name__c             &&    typeof BaseObject.Name__c == 'string'                &&     String(BaseObject.Name__c).trim() != '' && 
                        BaseObject.DeviceId__c         &&    typeof BaseObject.DeviceId__c == 'string'            &&     String(BaseObject.DeviceId__c).trim() != '' && 
                        BaseObject.DeviceVendor__c     &&    typeof BaseObject.DeviceVendor__c == 'string'        &&     String(BaseObject.DeviceVendor__c).trim() && 
                        BaseObject.DeviceType__c       &&    typeof BaseObject.DeviceType__c == 'string'          &&     String(BaseObject.DeviceType__c).trim() != '' &&
                        BaseObject.AddressObject__c    &&    typeof BaseObject.AddressObject__c == 'string'       &&     String(BaseObject.AddressObject__c).trim() != ''
                     )
                    {
                        //add saving indicator
                        var $tab = showLoading($(this).closest('.ui-tabs-panel'), 'Saving...');
                        // send request
                        var processData = { 
                            ajaxResource : 'MAAdminAJAXResources',
                            
            				action	: 'save_base_object',
            				BaseObject: JSON.stringify(addNamespace('{!namespace}', BaseObject)),
            				type : 'live;'
                        };
                        
                        Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                            processData,
                            function(json, event){
                                if (json.success)
                                {
                                    showSuccess($tab, 'Save Successful', 1500, function () {
                                    	FillBaseObjectComboBoxes();
                                    	HideAll();
                                    });
                                }
                                else
                                {
                                    //show error message
                                    var errMsg = json.details || 'Save Error: Please try again';
                                    showError($tab, errMsg);
                                }
                            },{buffer:false,escape:false}
                        );     
                    }
                    else
                    {
                        showError($(this).closest('.ui-tabs-panel'), 'Save Error: Make sure you have entered the base object <b>Name</b>, <b>Device ID</b>, <b>Device Vendor</b> and <b>Device Type</b> fields');
                    }
                            
                });            
                
                //Handle Edit Existing Save
                $('#adminsettings .buttons-edit .savebtn').click(function () 
                {
                    //build settings objects
                    var settings = {
                    	CheckInPostTo			: $('.editbaseobjectdetails .checkin-postto').val(),
                    	ChatterBody				: $('.editbaseobjectdetails .chatter-body').val(),
                    	VerificationDistance	: $('.editbaseobjectdetails .verification-distance').val(),
                    	VerificationUnit		: $('.editbaseobjectdetails .verification-unit').val(),
                    	VerificationRequired	: $('.editbaseobjectdetails .verification-required').is(':checked')
                    };
                    
                    var badBaseObjectValRegex = /(--)|(\.\.)/ig; // matches any textt with --text-- or Loading...
                    
                    
                    var BaseObject = {
                        Id:                         $('#adminsettings select.baseobject').val(),    
                        
                        // device fields
                        DeviceId__c :              badBaseObjectValRegex.test( ($('#editdeviceid').val() || '').trim() )             ? null : $('#editdeviceid').val(),
                        DeviceType__c :            badBaseObjectValRegex.test( ($('#editdevicetype').val() || '').trim() )           ? null : $('#editdevicetype').val(),
                        DeviceVendor__c :          badBaseObjectValRegex.test( ($('#editdevicevendor').val() || '').trim() )         ? null : $('#editdevicevendor').val(),
                        
                        RecordTypeId__c:            $('#editrecordtype').val(),
                        AddressObject__c:           badBaseObjectValRegex.test( ($('select.editbaseobjectdetails[data="addressloc"').val() || '..').trim() ) ? null : $('select.editbaseobjectdetails[data="addressloc"').val().trim(),
                        Name__c :                   $('#adminsettings input.editname').val(),
                        Description__c :            $('#adminsettings #createdescription').val(),
                        
                        // address fields
                        Street__c:                  badBaseObjectValRegex.test( ($('#editstreet').val() || '').trim() )              ? null : $('#editstreet').val(),
                        City__c:                    badBaseObjectValRegex.test( ($('#editcity').val() || '').trim() )                ? null : $('#editcity').val(),
                        State__c:                   badBaseObjectValRegex.test( ($('#editstate').val() || '').trim() )               ? null : $('#editstate').val(),
                        PostalCode__c:              badBaseObjectValRegex.test( ($('#editpostalcode').val() || '').trim() )          ? null : $('#editpostalcode').val(),
                        Country__c:                 badBaseObjectValRegex.test( ($('#editcountry').val() || '').trim() )             ? null : $('#editcountry').val(),
                        
                        Type__c :                   'Live',
                        Settings__c : 			    JSON.stringify(settings)
                    };
                    //
                    // make sure we have all the required fields filled in
                    if
                     (  BaseObject.Type__c             &&    typeof BaseObject.Type__c == 'string'                &&     String(BaseObject.Type__c).trim() == 'Live' && 
                        BaseObject.Name__c             &&    typeof BaseObject.Name__c == 'string'                &&     String(BaseObject.Name__c).trim() != '' && 
                        BaseObject.DeviceId__c         &&    typeof BaseObject.DeviceId__c == 'string'            &&     String(BaseObject.DeviceId__c).trim() != '' && 
                        BaseObject.DeviceVendor__c     &&    typeof BaseObject.DeviceVendor__c == 'string'        &&     String(BaseObject.DeviceVendor__c).trim() && 
                        BaseObject.DeviceType__c       &&    typeof BaseObject.DeviceType__c == 'string'          &&     String(BaseObject.DeviceType__c).trim() != '' &&
                        BaseObject.AddressObject__c    &&    typeof BaseObject.AddressObject__c == 'string'       &&     String(BaseObject.AddressObject__c).trim() != ''
                     )
                    {
                        //add saving indicator
                        var $tab = showLoading($(this).closest('.ui-tabs-panel'), 'Saving...');
                
                        var processData = { 
                            ajaxResource : 'MAAdminAJAXResources',
            				action	: 'save_base_object',
                            BaseObject: JSON.stringify(addNamespace('{!namespace}', BaseObject)),
            				type : 'live;'
                        };
                        
                        Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                            processData,
                            function(json, event){
                                if (json.success)
                                {
                                	showSuccess($tab, 'Edit Successful', 1500, function () {
                                		//FillBaseObjectComboBoxes();
                                    	//HideAll();
                                	});
                                }
                                else
                                {
                                    //show error message
                                    var errMsg = json.details || 'Save Error: Please try again';
                                    showError($tab, errMsg);
                                }
                            },{buffer:false,escape:false}
                        );     
                    }
                    else
                    {
                        showError($(this).closest('.ui-tabs-panel'), 'Save Error: Make sure you have entered the base object <b>Name</b>, <b>Device ID</b>, <b>Device Vendor</b> and <b>Device Type</b> fields');
                    }
                            
                });
                            
                //Handle Delete
                $('#adminsettings .buttons-delete .deletebtn').click(function () 
                { 
                    //add delete indicator
                    var $tab = showLoading($(this).closest('.ui-tabs-panel'), 'Deleting...');
                    
                    var processData = { 
                        ajaxResource : 'MAAdminAJAXResources',
                        
        				action	: 'delete_base_object',
                        object: $('#adminsettings select.deletebaseobject').val(),
                    };
                    
                    Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                        processData,
                        function(json, event){
                            if(json.success)
                            {
                                 showSuccess($tab, 'Delete Successful', 1500, function () {
                                 	FillBaseObjectComboBoxes();
                                 	HideAll();
                                 });
                            }
                            else
                            {  
                                showError($tab, 'Save Error: Please try again');
                            }
                        },{buffer:false,escape:false}
                    );
                });                  
            });
            
            function CreateBaseObjectFields(options)
    		{
    			//send requests to create the needed fields
    			var partnerURL = '{!$Api.Partner_Server_URL_280}';
           		var sessionId = '{!$Api.Session_ID}';
           		var fieldRequests = options.fieldRequests;
           		
    			$('#dialog-createfields .createablefield-row .createablefield-create').each(function () {
    				//grab stored field info
    				var fieldData = $(this).closest('.createablefield-row').data('createableField');
    				
    				//create a field request so we can track it and determine completion
    				var fieldRequest = {
    	            	done: false,
    	            	error: false
    	            };
    				fieldRequests.push(fieldRequest);
    				
    				//create field
    				if ($(this).is(':checked')) {
    					
    					//create json object based on type
    					var JSONData = {
    						sessionid: sessionId, 
    	                    serverurl: partnerURL,
    	                    type: fieldData.type,
    	                    object: options.baseObject,
    	                    name: fieldData.name,
    	                    label: fieldData.label,
    	            	};
    	            	
    	            	//add correct options for field creation
    					if(fieldData.type == 'Percent' || fieldData.type == 'Number')
    					{
    						JSONData.precision = fieldData.precision;
    		                JSONData.scale = fieldData.scale;
    					}
    					else if (fieldData.type == 'Text')
    					{
    						JSONData.length = fieldData.length;
    					}
    					
    					//send request
    					$.getJSON(
    						"https://product-api-prod.cloudbilt.com/createfield.php?callback=?",
    						JSONData,
    		                function (response) {
    		                	if (response.success) {
    		                		fieldRequest.id = response.data.result.id;
    		                	}
    		                	else {
    		                		fieldRequest.done = fieldRequest.error = true;
    		                	}
    		            	}
    		            );
    		        }
    		        else {
    		        	fieldRequest.done = true;
    		        }
    			});
    
    			//start an interval to check for completion of field creation
    			var fieldCreationInterval = setInterval(function () {
    				
    				//loop over each field request checking for completion
    				var done = true;
    				var error = false;
    				$.each(fieldRequests, function (index, fieldRequest) {
    					if (!fieldRequest.done) {
    						
    						//not done
    						done = false;
    					
    						//send a request to check status if we have an id
    						if (fieldRequest.id) {
    							$.getJSON(
    								"https://product-api-prod.cloudbilt.com/status.php?callback=?", 
    				                { 
    				                    sessionid: sessionId, 
    				                    serverurl: partnerURL,
    				                    id: fieldRequest.id
    				                },
    				                function(response) {
    				                    if (response.success) {
    				                    	if (response.data.result.done) {
    				                    		if (response.data.result.state == 'Error') {
    				                    			if (response.data.result.statusCode == 'DUPLICATE_DEVELOPER_NAME') {
    				                    			
    				                    				//the field already exists so we'll just use it
    				                    				fieldRequest.done = true;
    				                    			
    				                    			}
    				                    			else {
    				                    				fieldRequest.done = fieldRequest.error = true;	//unknown error
    				                    			}
    				                    		}
    				                    		else {
    				                    			fieldRequest.done = true;	//success
    				                    		}
    				                    	}
    				                    }
    				                    else {
    				                    	fieldRequest.done = fieldRequest.error = true;	//unknown error
    				                    }
    				            	}
    				            );
    				        }
    					}
    					else if (fieldRequest.error) {
    						error = true;
    					}
    				});
    				
    				//done?
    				if (done) {
    					clearInterval(fieldCreationInterval);
    					options.complete({ success: !error });
    				}
    
    
    			}, 2000);
    		}
            
            function FillBaseObjectComboBoxes()
            {
                //Clear options and set first child Loading indicator
                var $availableobject = $('select.availableobject');
                $availableobject.find('option:first-child').text('Loading...');
                $availableobject.find('option:not(:first-child)').remove();            
                var $baseobject = $('select.existingbaseobject[data="baseobject"]');
                $baseobject.find('option:first-child').text('Loading...');
                $baseobject.find('option:not(:first-child)').remove(); 
                      
                //Get Base Object for comboboxes
                var processData = { 
                    ajaxResource : 'MAAdminAJAXResources',
                    
    				action	: 'populate_base_objects',
                    type: 'live',
                };
                
                Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                    processData,
                    function(json, event){
                        if(json.success)
                        {        
                            $.each(json.available, function (i, record) 
                            {
                                    $('<option></option>').attr('value', record.label).text(record.name).appendTo($availableobject);                
                            }); 
                            $availableobject.removeAttr('disabled').find('option:first-child').text('--None--').attr('selected',true);
                            $availableobject.each(function(i, obj) {                          
                                $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                            });
                            $availableobject.combobox();                    
        
                            $.each(json.existing, function (i, record) 
                            {
                            	//namespace removal
                            	removeNamespace('{!namespace}', record);
                            	
                                $('<option></option>').attr('value', record.Id).text(record.Name__c).appendTo($baseobject);                
                            }); 
                            $baseobject.removeAttr('disabled').find('option:first-child').text('--None--').attr('selected',true);
                            $baseobject.each(function(i, obj) {                          
                                $(this).next().find('.ui-autocomplete-input').val($(this).find('option:selected').text());                            
                            });
                            $baseobject.combobox();
                        }
                        else
                        {
                            $('#adminsettings .buttons-create .msgs').html('<b>Error retrieving Base Object list</b>: Please try again').show();
                        }
                    },{buffer:false,escape:false}
                );
            }
            
            function HideAll()
            {
                //Hide Tabs and Buttons
                $('.availableobject-settings').hide();
                $('.baseobject-settings').hide();
                $('.buttons-create').hide();
                $('.buttons-edit').hide();
                $('.buttons-delete').hide();            
               
                //Hide error messages
                $('#adminsettings .buttons-create .msgs').hide();
                $('#adminsettings .buttons-edit .msgs').hide();
                $('#adminsettings .buttons-delete .msgs').hide();
                
                ClearAll();
            }
            
            function ClearAll()
            {
                //Clear Name fields
                $('#adminsettings input.createname').val('');
                $('#adminsettings #createdescription').val('');
                
                
                $('#adminsettings input.editname').val('');
                $('#adminsettings #editdescription').val('');
                
                //Clear Read-Only Base Object
                $("span.readonlybaseobject").html('');
            }
            
            function loadCreateableFields(baseObject)
            {
            	//show loading
               	var $dialog = showLoading($('#dialog-createfields').closest('.ui-dialog'), 'Loading...');
               	
               	//send request to get createable fields
                var processData = { 
                    ajaxResource : 'MAAdminAJAXResources',
               		action			: 'get_createable_fields',
               		baseObject		: baseObject
                };
                
                Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                    processData,
                    function(response, event){
                        if(event.status) {
                       		//populate the createable fields table
                       		$('#dialog-createfields-table .createablefield-row').remove();
                       		$.each(response.createableFields, function (index, createableField) {
                       		
                       			//basic fields
                       			var $createableFieldRow = $('#templates .createablefield-row').clone().attr('data-name', createableField.name).data('createableField', createableField);
                       			$createableFieldRow.find('.createablefield-label').text(createableField.label);
                       			
                       			//does this field exist?
                       			if (createableField.exists)
                       			{
                       				$createableFieldRow.find('.createablefield-exists').html("<img src='{!URLFOR($Resource.MapAnything, 'images/check-22.png')}' />");
                       				
                       				//if this is the skip geocoding field, make sure the checkbox for it is visible
                       				if (createableField.name == 'MASkipGeocoding__c') {
                       					$('#editskipfailedgeocodes').show().next().hide();
                       				}
                       			}
                       			else
                       			{
                       				$createableFieldRow.find('.createablefield-exists').html("<input type='checkbox' class='createablefield-create' checked='checked' />")
                       			}
                       			
                       			//render the row
                       			$('#dialog-createfields-table').append($createableFieldRow);
                       		});
                       		
                       		//hide loading
                       		hideMessage($dialog);
                       	}
                       	else
                       	{
                       	}
                    },{buffer:false,escape:false}
                );
            }
            
            /* Workflow Metadata Section */
            function loadCreateableWorkflows(baseObject)
            {
            	//show loading
               	var $dialog = showLoading($('#dialog-createpurgeworkflows').closest('.ui-dialog'), 'Loading...');
               	
               	//generate list of possible workflows to create
           		var fieldsToCreateWorkflow = {};
               	
               	//get all the address fields that have a selection
               	$('.purgeaddressfields:visible select[data=addressfield]').closest('td').find('span:visible:first').each(function () {
               		var value = $(this).closest('td').find('select[data=addressfield]').val();
               		
               		if(value != '--Please Choose--')
               		{
                		fieldsToCreateWorkflow[baseObject+'.'+baseObject.replace('__c', '')+'_'+value.replace('__c', '')+'_Field_Changed'] = value;
                	}
               	});
               	
               	//send request to get created workflows
                var processData = { 
                    ajaxResource : 'MAAdminAJAXResources',
               		action						: 'get_created_metadata',
               		baseObject					: baseObject,
    				serializedAddressFields		: JSON.stringify(fieldsToCreateWorkflow),
    				queryType					: 'WorkflowRule'
                };
                
                Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                    processData,
                    function(response, event){
                        if(event.status) {
                       		$('#dialog-deletepurgeworkflows-table .createablefield-row').remove();
                       		$('#dialog-createpurgeworkflows-table .createablefield-row').remove();
                       		
                       		//populate the deleteable workflows table
                       		$.each(response.deleteableMap, function (index, deleteableWorkflow) {
                       			
                       			//basic fields
                       			var $deleteableWorkflowRow = $('#templates .createablefield-row').clone().attr('data-name', deleteableWorkflow.fullName).data('deleteableWorkflow', deleteableWorkflow);
                       			$deleteableWorkflowRow.find('.createablefield-label').text(deleteableWorkflow.fullName);
                       			
                       			$deleteableWorkflowRow.find('.createablefield-exists').html("<img src='{!URLFOR($Resource.MapAnything, 'images/x-22.png')}' onclick='deleteWorkflow(\""+deleteableWorkflow.fullName+"\"); return false;' style='cursor: pointer;' />");
                       			
                       			//render the row
                       			$('#dialog-deletepurgeworkflows-table').append($deleteableWorkflowRow);
                       		});
                       		
                       		//populate the created/createable workflows table
        	               	$.each(Object.keys(fieldsToCreateWorkflow), function (index, workflowName) {
                       			
                       			created = workflowName in response.createdMap;
                       			createableWorkflow = created ? response.createdMap[workflowName] : { };
                       			
                       			//basic fields
                       			var $createableWorkflowRow = $('#templates .createablefield-row').clone().attr('data-field', fieldsToCreateWorkflow[workflowName]).attr('data-name', workflowName).data('createableWorkflow', createableWorkflow);
                       			$createableWorkflowRow.find('.createablefield-label').text(workflowName);
                       			
                       			$createableWorkflowRow.find('.createablefield-exists').html(created ? "<img src='{!URLFOR($Resource.MapAnything, 'images/check-22.png')}' />" : "<input type='checkbox' class='createablefield-create' checked='checked' />");
                       			
                       			//render the row
                       			$('#dialog-createpurgeworkflows-table').append($createableWorkflowRow);
        	               	});
                       		
                       		//hide loading
                       		hideMessage($dialog);
                       	}
                       	else if (response.errorMessage && response.errorMessage.indexOf('Unauthorized endpoint') != -1)
                       	{
                       		showError($dialog, 'Unauthorized Endpoint', 3000, function () {
                       			hidePopup($('#dialog-createpurgeworkflows'));
                       		});
                       	}
                    },{buffer:false,escape:false}
                );
            }
            
            function createWorkflowActions(baseObject, $dialog)
            {
            	//generate batches of fields to create (only 5 fields can be made per request)
     			var fieldsToCreateWorkflowBatches = [];
    	     	var fieldsToCreateWorkflow = [];
    	     	
    	     	//get the fields that we want to update
    			var fieldsToUpdate = [];
    			if ($('#editlatitude').val() != '--Please Choose--') {
    				fieldsToUpdate.push($('#editlatitude').val());
    			}
    			if ($('#editlongitude').val() != '--Please Choose--') {
    				fieldsToUpdate.push($('#editlongitude').val());
    			}
    	     	
    	     	//get all the address fields that have a selection
    	     	$('#dialog-createpurgeworkflows-table input:checked').each(function () {
    	     		var value = $(this).closest('tr').attr('data-field');
    	     		
    	     		fieldsToCreateWorkflow.push(value);
    	     		
    	     		if (fieldsToCreateWorkflow.length == 5)
    	     		{
    	     			//move to the next batch
    	     			fieldsToCreateWorkflowBatches.push(fieldsToCreateWorkflow);
    	     			fieldsToCreateWorkflow = [];
    	     		}
    	     	});
    	     	
    	     	//add the last batch if needed
    	     	if (fieldsToCreateWorkflow.length > 0)
    	     	{
    	     		fieldsToCreateWorkflowBatches.push(fieldsToCreateWorkflow);
    	     	}
    	     	
    	     	//send requests to create fields
    	     	requestsOut = 0;
    	     	creationFailures = 0;
    			lastError = '';
    	     	$.each(fieldsToCreateWorkflowBatches, function (index, batch) {
    	     	
    	     		//send this batch
    	     		requestsOut++;
    			    
        			var processData = { 
                        ajaxResource : 'MAAdminAJAXResources',
    			        action						: 'create_workflowActions',
    			        baseObject					: baseObject,
    			        fieldsToUpdate				: JSON.stringify(fieldsToUpdate),
    			        serializedAddressFields		: JSON.stringify(batch)
                    };
                    
                    Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                        processData,
                        function(response, event){
        					if(!response.success) 
        					{ 
        						requestsOut--;
        			          	creationFailures += batch.length;
        					}
        					else
        					{
        						//get a list of ids that were returned (these are process ids that can be used to get the status of the request)
        		           		var resultIds = [];
        		           		$.each((response.results || []), function (index, result) {
        		           			resultIds.push(result.substring(result.indexOf('<id>') + 4, result.indexOf('</id>')));
        		           		});
        		           		
        		           		checkMetadata(resultIds, $dialog, 'WorkflowAction');
        					}
                        },{buffer:false,escape:false}
    	            );
    			});
    			
    			//done sending batches.  now start polling for completion
    			setTimeout(function checkCreationRequestsTimeout() {
    				if (requestsOut == 0)
    				{
    					//done.  show success
    					showSuccess($dialog, 'Done.  ' + creationFailures + ' failures.' + lastError, creationFailures > 0 ? 2500 : 1500, function () {
    	    				loadCreateableWorkflows(baseObject);
    	    			});
    				}
    				else
    				{
    					//not done.  keep polling
    					setTimeout(checkCreationRequestsTimeout, 1000);
    				}
    			}, 1000);
            }
            
            function deleteWorkflow(workflow)
            {
            	//show loading
               	var $dialog = showLoading($('#dialog-createpurgeworkflows').closest('.ui-dialog'), 'Deleting...');
               	
               	var baseObject = workflow.split('.')[0];
                
                //send request to delete the workflows
    			var processData = { 
                    ajaxResource : 'MAAdminAJAXResources',
    				action						: 'delete_metadata',
    	   			metadataName				: workflow,
    	   			metadataType				: 'WorkflowRule'
                };
                
                Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                    processData,
                    function(response, event){
        				if(!response.success) 
        				{ 
        					showError($dialog, response.errorMessage);
        					return; 
        				}
        				else
        				{
        					//get a list of ids that were returned (these are process ids that can be used to get the status of the request)
                     		var resultIds = [];
                     		$.each((response.results || []), function (index, result) {
                     			resultIds.push(result.substring(result.indexOf('<id>') + 4, result.indexOf('</id>')));
                     		});
                     		
                     		checkMetadata(resultIds, $dialog, 'WorkflowRule', baseObject);
        				}
                    },{buffer:false,escape:false}
    			);
            }
            /* End Workflow Metadata Section */
            
            /* Checking and Retrieving Metadata Section */
            function checkMetadata(resultIds, $dialog, metadataType, baseObject, retrieveType, action, buttonName, checkLayouts, batchSize)
            {
            	//set acceptable status code
            	if(metadataType == 'FieldUpdate') { statusCode = 'DUPLICATE_DEVELOPER_NAME'; }
            	else if(metadataType == 'WorkflowAction' || metadataType == 'WorkflowRule') { statusCode = 'DUPLICATE_VALUE'; }
            	else { statusCode = null; }
            	
            	//create a timeout to keep checking metadata status until the requests are done
        		setTimeout(function checkMetadataTimeout() {
       				
     				//send request to check status
    	            var processData = { 
                        ajaxResource : 'MAAdminAJAXResources',
                        action			: 'check_metadata_status',
    					serializedIds	: JSON.stringify(resultIds)
                    };
                    
                    Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                        processData,
                        function(response, event){
        	               	if (response.success)
        	               	{
        	               		//compile results
        	               		var isDone = true;
        	               		batchFailures = 0;
        	               		if(metadataType == 'FieldUpdate' || metadataType == 'WorkflowRule') { lastError = ''; }
        	               		$.each(response.results, function (index, result) {
        	               		
        	               			//track completion and failure
        	               			if (!result.done) {
        	               				isDone = false;
        	               				return false;
        	               			}
        	               			else if (result.statusCode && result.statusCode != statusCode) {
        	               				batchFailures++;
        	               				lastError = '  ('+result.message+')';
        	               			}
        	               			
        	               		});
        	               		
        	               		//if we're done, show complete.  if not, check again
        	               		if (isDone && batchFailures == 0) 
        	               		{
        	               			if(metadataType == 'FieldUpdate') { createWorkflowActions(baseObject, $dialog); }
        	               			else if(metadataType == 'WorkflowRule') { loadCreateableWorkflows(baseObject); }
        	               			else if(metadataType == 'WorkflowAction') { requestsOut--; creationFailures += batchFailures; }
        	               			else if(metadataType == 'Layout') { requestsOut--; }
        				            else if(metadataType == 'retrieveZipFiles') { retrieveZipFiles(response.results, $dialog, retrieveType, action, baseObject, buttonName, checkLayouts); }
        				            else if(metadataType == 'Button')
        				            {
        					            baseObject = $('.editbaseobjectdetails.readonlybaseobject b').text(); 
        							    
        							    MALog($('#buttonType').val());
        							    
        							    if($('#buttonType').val() == 'button')
        						       	{
        							     	//generate batches of layouts to edit (only 5 layouts can be retrieved per request)
        			           				var layoutsToEditBatches = [];
        			           				var layoutsToEdit = [];
        			           				requestsOut = 0;
        			           				$('#dialog-addmapitbuttonstolayout-table .createablefield-create:checked').each(function () {
        			           					var row = $(this).closest('tr');
        			           					layoutsToEdit.push(row.attr('data-name'));
        			           					layoutsToEdit.push(row.attr('data-namespace'));
        			           					
        			           					//only 5 requests per batch - each request has 2 entries
        			           					if (layoutsToEdit.length == 10)
        							       		{
        							       			//move to the next batch
        			           						layoutsToEditBatches.push(layoutsToEdit);
        			           						layoutsToEdit = [];
        			           					}
        			           					
        			           					requestsOut++;
        			           				});
        							       	
        							       	//add the last batch if needed
        							       	if (layoutsToEdit.length > 0)
        							       	{
        							       		layoutsToEditBatches.push(layoutsToEdit);
        							       	}
        							       	
        						       	  	if(layoutsToEditBatches.length > 0) { retrieveLayouts('add', layoutsToEditBatches, baseObject, $dialog, false, buttonName); }
        							       	else
        							       	{
        							       		$('.mapItButtonTable tr:not(:first)').remove();
        					     				baseObjectId = $('#adminsettings .baseobject-settings .mapitdescription').attr('BaseObjectId');
        										loadMapItButtons(baseObject, baseObjectId, 'openPopup', buttonName);
        							       	}
        							    }
        							    else if($('#buttonType').val() == 'massActionButton')
        							    {
        							    	requestsOut = 1;
        							    	loadCustomObjects(baseObject, $dialog, buttonName, 'add');
        							    }
        				            }
        	               		}
        	               		else if (!isDone) 
        	               		{
        	               			setTimeout(checkMetadataTimeout, 500);
        	               		} 
        	               		else
        	               		{
        	               			if(metadataType != 'WorkflowAction' && $dialog != null) { showError($dialog, lastError); }
        	               			if(metadataType == 'retrieveZipFiles') 
        	               			{ 
        	               				requestsOut -= batchSize; creationFailures += batchSize; 
        	               				if(retrieveType == 'button') { $('.mapItButtonTableLoading').text(lastError); }
        	               			}
        		               		else if(metadataType == 'Layout' || metadataType == 'Button') { requestsOut--; creationFailures++; }
        	               		}
        	               	}
        	               	else
        	               	{
        	               		if(metadataType == 'retrieveZipFiles')
        	               		{ 
        	               			requestsOut -= batchSize; creationFailures += batchSize; 
        	               			if(retrieveType == 'button') { $('.mapItButtonTableLoading').text(lastError); }
        	               		}
        	               		else if(metadataType == 'Layout' || metadataType == 'Button') { requestsOut--; creationFailures++; }
        	               		if($dialog != null) { showError($dialog, 'Unknown Error'); }
        	               	}
                        },{buffer:false,escape:false}
                  	);
        		}, 1000);
            }
            
            function retrieveZipFiles(results, $dialog, retrieveType, action, baseObject, buttonName, checkLayouts)
            {
            	//get a list of ids that were returned (these are process ids that can be used to get the status of the request)
          		$.each((results || []), function (index, result) {
           		
               		//send request to get retrieve zip
        			var processData = { 
                        ajaxResource : 'MAAdminAJAXResources',
                        action			: 'check_metadata_retrieve_status',
        				id				: result.id			
                    };
                    
                    Visualforce.remoting.Manager.invokeAction(MARemoting.processAJAXRequest,
                        processData,
                        function(response, event){
                        	if (response.success)
                        	{
                        		//if we're done, check the action to perform.  if not, check again
                        		if (response.result.zipFile && !response.result.messages) {
                        			
                        			zipFile = new JSZip(response.result.zipFile, {base64:true});
                        			result = response.result.fileProperties[0];
                        			fileName = result.fileName;
                        			
                        			if(retrieveType == 'layout')
                        			{
        	                			//add the buttons
        	                			if (action == 'add') { updateLayout(zipFile, fileName, $dialog, 'add', buttonName); }
        	                			//remove buttons
        	                			else if (action == 'remove') { updateLayout(zipFile, fileName, $dialog, 'remove', buttonName); }
        	                			//show pages with buttons
        	                			else if (action == 'show' && checkLayouts) { checkLayout(zipFile, fileName, $dialog, buttonName); }
        	                			else { matchedLayouts.push(name); requestsOut--; }
        	                		}
        	                		else if(retrieveType == 'button')
        	                		{
        	                			//update the button
        	                			if(buttonName != null && action != 'openPopup') { updateMapItButton(zipFile, fileName, $dialog,  buttonName, baseObject); }
        	                			//add the buttons to the table
        	                			else { addButtonToTable(zipFile, result.fileName, result.namespacePrefix, baseObject); }
        	                		}
        	                		else if(retrieveType == 'listView')
        	                		{
        	                			MALog('retrieve2:'+action);
        	                			MALog(buttonName);
        	                			MALog(zipFile);
        	                			checkSearchLayouts(zipFile, result.fileName, result.namespacePrefix, $dialog, buttonName, baseObject, action);
        	                		}
                        		}
                        		else
                        		{
                        			requestsOut--;
                        			creationFailures++;
                        			if($dialog != null) { showError($dialog, response.messages); }
                        		}
                        	}
                        	else
                        	{
                        		requestsOut--;
                        		creationFailures++;
                        		if($dialog != null) { showError($dialog, 'Unknown Error'); }
                        	}
                        },{buffer:false,escape:false}
                	);
          		});
            }
            /* End Checking and Retrieving Metadata Section */
        </script>
        
        <div class="flex-column full-height">
            <!-- Header -->
            <div class="slds-scope">
                <div class="slds-page-header">
                  <div class="slds-grid">
                    <div class="slds-col slds-has-flexi-truncate">
                      <div class="slds-media slds-no-space slds-grow">
                        <div class="slds-media__figure ma-slds-media__figure">
                          <span class="slds-icon ma-icon ma-icon-mapanything"></span>
                        </div>
                        <div class="slds-media__body">
                          <p class="slds-text-title--caps slds-line-height--reset">MapAnything</p>
                          <h1 class="slds-page-header__title slds-m-right--small slds-align-middle slds-truncate" title="this should match the Record Title">Configuration</h1>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
            </div>
        
            <div class="flex-row flex-grow-1">
                <div class="flex-shrink-0">
                    <!--navigation-->
                    <c:MAAdminHeader />
                </div>
                <div class="flex-grow-1">  
                    <!-- Error State -->
                    <div id='adminsettings-error'>
                    
                        <!-- Title -->
                        <h2>{!$Label.MA_Error}</h2>
                        <h3>{!$Label.MA_EQ_Error_Message}</h3>
                    
                        <!-- Message -->
                        <div></div>        
                    </div>
                
                    <!-- Non-Error State -->
                    <div id='adminsettings'>
                        <div class="BottomTabs">
                            <ul>
                                <li><a href="#BottomTabs-1">{!$Label.MA_Create_New}</a></li>
                                <li><a href="#BottomTabs-2">{!$Label.MA_Edit_Existing}</a></li>
                                <li><a href="#BottomTabs-3">{!$Label.MA_Remove_Existing}</a></li>
                            </ul>
                            <div id="BottomTabs-1">              
                                <table style="width:100%;" cellpadding="5">
                                    <tr>
                                        <td style="vertical-align:top;">
                                            <table cellpadding="5" cellspacing="0">
                                                <tr>
                                                    <td style="white-space: nowrap"><b>{!$Label.MA_Base_Object}</b></td>
                                                    <td>
                                                        <select class='availableobject' data='baseobject' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>
                                                    </td>
                                                </tr>
                                             </table>
                                          </td>
                                        </tr>
                                        <tr>
                                            <td style="vertical-align:top;">
                                                <div class='availableobject-settings'>  
                                                    
                                                    <!-- Base Object Details -->
                                                    <div class="gray box section newbaseobjectdetails">
                                                        <div class="section-header">{!$Label.MA_Base_Object_Details}</div>
                                                        <div class="section-body box">
                                                            <table style="width:100%" cellpadding="5" cellspacing="0">
                                                                <tr>
                                                                    <td style="width:10%">
                                                                        <b>{!$Label.MA_Name}</b>
                                                                    </td>
                                                                    <td style="width:40%">                                                      
                                                                        <input type='text' class='createname' style='width: 200px;' />                       
                                                                    </td>
                                                                    <td style="width:10%"> 
                                                                        <b>Device Origin</b>                                                    
                                                                    </td>
                                                                    <td style="width:40%">                                                       
                                                                        <select id="createaddressloc" class='newbaseobjectdetails combobox' data='addressloc' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>
                                                                        <b>{!$Label.MA_Description}</b>
                                                                    </td>
                                                                    <td>
                                                                        <textarea id='createdescription' rows="4" cols="50" />
                                                                    </td>
                                                                    <td>
                                                                        <b>{!$Label.MA_Record_Type}</b>
                                                                    </td>
                                                                    <td>
                                                                        <select id="createrecordtype" class='newbaseobjectdetails combobox' data='recordtypefield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>
                                                                    </td>
                                                                </tr>
                                                          </table>
                                                      </div>
                                                  </div>
                                                  
                                                    <!-- Device Fields -->
                                                    <div class="gray box section newbaseobjectdetails">
                                                        <div class="section-header">Device Fields</div>
                                                        <div class="section-body box">
                                                            <table style="width:100%" cellpadding="5" cellspacing="0">
                                                                <tr>
                                                                    <td style="width:10%"> 
                                                                        <span class="required-field-asterick">*</span>
                                                                        <b>Device Vendor</b>                                                    
                                                                    </td>
                                                                    <td style="width:40%">                                                       
                                                                        <select id="createdevicevendor" class='newbaseobjectdetails combobox' data='devicefield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td style="width:10%"> 
                                                                        <span class="required-field-asterick">*</span>
                                                                        <b>Device Type</b>                                                    
                                                                    </td>
                                                                    <td style="width:40%">                                                       
                                                                        <select id="createdevicetype" class='newbaseobjectdetails combobox' data='devicefield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td style="width:10%"> 
                                                                        <span class="required-field-asterick">*</span>
                                                                        <b>Device ID</b>                                                    
                                                                    </td>
                                                                    <td style="width:40%">                                                       
                                                                        <select id="createdeviceid" class='newbaseobjectdetails combobox' data='devicefield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>
                                                                    </td>
                                                                </tr>
                                                          </table>
                                                      </div>
                                                  </div>
                                                     
                                                    <!-- Address Fields (Live) -->
                                                    <div class="gray box section newbaseobjectdetails">
                                                        <div class="section-header">{!$Label.MA_Address_Fields}</div>
                                                        <div class="section-body box">
                                                          <table style="width:100%" cellpadding="5" cellspacing="0">
                                                              <tr>
                                                                  <td style="width:10%">
                                                                      <b>{!$Label.MA_Street}</b>                                                      
                                                                  </td>
                                                                  <td style="width:40%">                                                      
                                                                      <select id="createstreet" class='newbaseobjectdetails combobox' data='addressfield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>                      
                                                                  </td>
                                                                  <td style="width:10%"> 
                                                                      <b>{!$Label.MA_Postal_Code}</b>                                                     
                                                                  </td>
                                                                  <td style="width:40%">                                                       
                                                                      <select id="createpostalcode" class='newbaseobjectdetails combobox' data='addressfield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>                      
                                                                  </td>
                                                              </tr>
                                                              <tr>
                                                                  <td>
                                                                      <b>{!$Label.MA_City}</b>
                                                                  </td>
                                                                  <td> 
                                                                      <select id="createcity" class='newbaseobjectdetails combobox' data='addressfield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>                      
                                                                  </td>
                                                                  <td> 
                                                                      <b>{!$Label.MA_Country}</b>
                                                                  </td>
                                                                  <td> 
                                                                      <select id="createcountry" class='newbaseobjectdetails combobox' data='addressfield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>                      
                                                                  </td>
                                                              </tr>
                                                              <tr>
                                                                  <td>
                                                                      <b>{!$Label.MA_State}</b>
                                                                  </td>
                                                                  <td> 
                                                                      <select id="createstate" class='newbaseobjectdetails combobox' data='addressfield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>                      
                                                                  </td>
                                                                  <td colspan="2"></td>
                                                              </tr>
                                                          </table>
                                                        </div>                                  
                                                    </div>
                                                     
                                                    <!-- Check In Settings -->
                                                    <div class="gray box section newbaseobjectdetails">
                                                      <div class="section-header">{!$Label.MA_Check_In_Settings}</div>
                                                      <div class="section-body box">
                                                          <table style="width:100%" cellpadding="5" cellspacing="0">
                                                              <tr>
                                                              	<td style="width:10%;"><b>{!$Label.MA_Post_To}</b></td>
                                                              	<td style="width:40%;">
                                                              		<select class='checkin-postto combobox'>
                                                              			<option value='Chatter'>{!$Label.MA_Chatter}</option>
                                                              			<option value='Task'>{!$Label.MA_Task}</option>
                                                              			<option value='Event'>Event</option>
                                                              			<option value='Chatter|Task'>{!$Label.MA_Chatter_Task}</option>
                                                              			<option value='Chatter|Event'>Chatter &amp; Event</option>
                                                              		</select>
                                                              	</td>
                                                              	<td style="width:10%;"><b>{!$Label.MA_Verification_Distance}</b></td>
                                                              	<td style="width:40%;">
                                                              		<input type='text' class='verification-distance' style='width: 50px;' />
                                                                	<select class='verification-unit combobox'>
                                                                		<option value='ft'>{!$Label.MA_Feet}</option>
                                                                		<option value='m'>{!$Label.MA_Meters}</option>
                                                                		<option value='km'>{!$Label.MARoutes_Kilometers}</option>
                                                                		<option value='mi'>{!$Label.MARoutes_Miles}</option>
                                                                	</select>
                                                              	</td>
                                                              </tr>
                                                              <tr>
                                                              	<td><b>{!$Label.MA_Chatter_Body}</b></td>
                                                              	<td><textarea class='chatter-body' rows="4" style='width: 80%;'></textarea></td>
                                                              	<td><b>{!$Label.MA_Verification_Required}</b></td>
                                                              	<td><input type='checkbox' class='verification-required' /></td>
                                                              </tr>
                                                              <tr>
                                                              	<td colspan="4">
                                                              	    <table style="color: #757575;" cellpadding="2" class="chatter-post-merge-fields">
                                                              	        <tr>
                                                              	            <td>{tooltip1}</td>
                                                              	            <td>=</td>
                                                              	            <td>Value of Tooltip 1 </td>
                                                              	            
                                                              	            <td>{distance-meters}</td>
                                                              	            <td>=</td>
                                                              	            <td>Distance in Meters (Same as {distance})</td>
                                                              	            
                                                              	            <td>{accuracy-meters}</td>
                                                              	            <td>=</td>
                                                              	            <td>Accuracy in Meters</td>
                                                              	        </tr>
                                                              	        <tr>
                                                              	            <td>{lat}</td>
                                                              	            <td>=</td>
                                                              	            <td>Latitude on Check In</td>
                                                              	            
                                                              	            <td>{distance-kilometers}</td>
                                                              	            <td>=</td>
                                                              	            <td>Distance in Kilometers</td>
                                                              	            
                                                              	            <td>{accuracy-kilometers}</td>
                                                              	            <td>=</td>
                                                              	            <td>Accuracy in Kilometers</td>
                                                              	        </tr>
                                                              	        <tr>
                                                              	            <td>{long}</td>
                                                              	            <td>=</td>
                                                              	            <td>Longitude of Check In</td>
                                                              	            
                                                              	            <td>{distance-miles}</td>
                                                              	            <td>=</td>
                                                              	            <td>Distance in Miles</td>
                                                              	            
                                                              	            <td>{accuracy-miles}</td>
                                                              	            <td>=</td>
                                                              	            <td>Accuracy in Miles</td>
                                                              	        </tr>
                                                              	        <tr>
                                                              	            <td>{distance}</td>
                                                              	            <td>=</td>
                                                              	            <td>Distance in Meters</td>
                                                              	            
                                                              	            <td>{distance-feet}</td>
                                                              	            <td>=</td>
                                                              	            <td>Distance in Feet</td>
                                                              	            
                                                              	            <td>{accuracy-feet}</td>
                                                              	            <td>=</td>
                                                              	            <td>Accuracy in Feet</td>
                                                              	        </tr>
                                                              	        <tr>
                                                              	            <td></td>
                                                              	            <td></td>
                                                              	            <td></td>
                                                              	            
                                                              	            <td>{distance-yards}</td>
                                                              	            <td>=</td>
                                                              	            <td>Distance in Yards</td>
                                                              	            
                                                              	            <td>{accuracy-yards}</td>
                                                              	            <td>=</td>
                                                              	            <td>Accuracy in Yards</td>
                                                              	        </tr>
                                                              	        <tr>
                                                              	            <td colspan="6">
                                                              	                *All distances are rounded to 2 decimal places
                                                              	            </td>
                                                              	        </tr>
                                                              	    </table>
                                                              	</td>
                                                              </tr>
                                                          </table>
                                                      </div>
                                                    </div>
                
                                                  <div id="warningBox" style="display:none;" class="warning-box new">
                                                      <div style="display:inline-block;">
                                                          <span style="font-size: 30px;padding: 25px 20px;" class="MAIcon ion-android-warning"></span>
                                                      </div>
                                                      <div style="display:inline-block; font-weight:bold;">
                                                          <div>{!$Label.MA_Settings_Warning}</div>
                                                          <a href="http://wiki.cloudbilt.com/mapanything/clean-address-fields/" target="_blank">More Info</a>
                                                      </div>
                                                  </div>
                                                                                     
                                              </div>
                                          </td>
                                      </tr>
                                  </table>
                                
                                <!-- Buttons  -->
                                <div class='buttons-create' style='display:none;'>
                                    <input type='button' class='savebtn MAbutton button-blue' value='Save' />
                                    <!--<input type='button' class='suggestbtn MAbutton button-blue' value='Suggest' />-->
                                    <!--<input type='button' class='createfieldsbtn MAbutton button-blue' value='Create Fields...' style='width: 125px;' />-->              
                                    <span class='msgs' style='color: red; font-size: 10px; display: none;'></span>
                                </div>
                            </div>
                            <div id="BottomTabs-2">
                                <table style="width:100%;" cellpadding="5">
                                    <tr>
                                        <td style="vertical-align:top;">
                                            <table cellpadding="5" cellspacing="0">
                                                <tr>
                                                    <td style="white-space: nowrap"><b>{!$Label.MA_Base_Object}</b></td>
                                                    <td>
                                                        <select class='existingbaseobject baseobject' data='baseobject' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>
                                                    </td>
                                                </tr>                                
                                             </table>
                                          </td>
                                      </tr>
                                      <tr>
                                          <td style="vertical-align:top;">
                                              <div class='baseobject-settings'>
                                                  
                                                  <!-- base object details -->
                                                  <div class="gray box section newbaseobjectdetails">
                                                        <div class="section-header">{!$Label.MA_Base_Object_Details}</div>
                                                        <div class="section-body box">
                                                            <table style="width:100%" cellpadding="5" cellspacing="0">
                                                                <tr>
                                                                    <td style="width:10%">
                                                                        <b>{!$Label.MA_Name}</b>
                                                                    </td>
                                                                    <td style="width:40%">                                                      
                                                                        <input type='text' class='editname' style='width: 200px;' />                       
                                                                    </td>
                                                                    <td style="width:10%"> 
                                                                        <b>Device Origin</b>                                                    
                                                                    </td>
                                                                    <td style="width:40%">                                                       
                                                                        <select id="editaddressloc" class='editbaseobjectdetails combobox' data='addressloc' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>
                                                                        <b>{!$Label.MA_Related_Object}</b>
                                                                    </td>
                                                                    <td style="width:40%">                                                      
                                                                      <span class='editbaseobjectdetails readonlybaseobject' style='width: 200px;' />                       
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td>
                                                                        <b>{!$Label.MA_Description}</b>
                                                                    </td>
                                                                    <td>
                                                                        <textarea id='editdescription' rows="4" cols="50" />
                                                                    </td>
                                                                    <td>
                                                                        <b>{!$Label.MA_Record_Type}</b>
                                                                    </td>
                                                                    <td>
                                                                        <select id="editrecordtype" class='editbaseobjectdetails combobox' data='recordtypefield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>
                                                                    </td>
                                                                </tr>
                                                          </table>
                                                      </div>
                                                  </div>
                                                  
                                                  <!-- device fields -->
                                                  <div class="gray box section newbaseobjectdetails">
                                                        <div class="section-header">Device Fields</div>
                                                        <div class="section-body box">
                                                            <table style="width:100%" cellpadding="5" cellspacing="0">
                                                                <tr>
                                                                    <td style="width:10%"> 
                                                                        <span class="required-field-asterick">*</span>
                                                                        <b>Device Vendor</b>                                                    
                                                                    </td>
                                                                    <td style="width:40%">                                                       
                                                                        <select id="editdevicevendor" class='editbaseobjectdetails combobox' data='devicefield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td style="width:10%"> 
                                                                        <span class="required-field-asterick">*</span>
                                                                        <b>Device Type</b>                                                    
                                                                    </td>
                                                                    <td style="width:40%">                                                       
                                                                        <select id="editdevicetype" class='editbaseobjectdetails combobox' data='devicefield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>
                                                                    </td>
                                                                </tr>
                                                                <tr>
                                                                    <td style="width:10%"> 
                                                                        <span class="required-field-asterick">*</span>
                                                                        <b>Device ID</b>                                                    
                                                                    </td>
                                                                    <td style="width:40%">                                                       
                                                                        <select id="editdeviceid" class='editbaseobjectdetails combobox' data='devicefield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>
                                                                    </td>
                                                                </tr>
                                                          </table>
                                                      </div>
                                                  </div>
                                                  
                                                  <!-- address fields -->
                                                  <div class="gray box section editbaseobjectdetails purgeaddressfields">
                                                      <div class="section-header">{!$Label.MA_Address_Fields}</div>
                                                      <div class="section-body box">
                                                          <table style="width:100%" cellpadding="5" cellspacing="0">
                                                              <tr>
                                                                  <td style="width:10%">
                                                                      <b>{!$Label.MA_Street}</b>                                                      
                                                                  </td>
                                                                  <td style="width:40%">                                                      
                                                                      <select id="editstreet" class='editbaseobjectdetails combobox' data='addressfield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>                      
                                                                  </td>
                                                                  <td style="width:10%"> 
                                                                      <b>{!$Label.MA_Postal_Code}</b>                                                     
                                                                  </td>
                                                                  <td style="width:40%">                                                       
                                                                      <select id="editpostalcode" class='editbaseobjectdetails combobox' data='addressfield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>                      
                                                                  </td>
                                                              </tr>
                                                              <tr>
                                                                  <td>
                                                                      <b>{!$Label.MA_City}</b>
                                                                  </td>
                                                                  <td> 
                                                                      <select id="editcity" class='editbaseobjectdetails combobox' data='addressfield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>                      
                                                                  </td>
                                                                  <td> 
                                                                      <b>{!$Label.MA_Country}</b>
                                                                  </td>
                                                                  <td> 
                                                                      <select id="editcountry" class='editbaseobjectdetails combobox' data='addressfield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>                      
                                                                  </td>
                                                              </tr>
                                                              <tr>
                                                                  <td>
                                                                      <b>{!$Label.MA_State}</b>
                                                                  </td>
                                                                  <td> 
                                                                      <select id="editstate" class='editbaseobjectdetails combobox' data='addressfield' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>                      
                                                                  </td>
                                                                  <td colspan="2"></td>
                                                              </tr>
                                                          </table>
                                                      </div>                                  
                                                  </div>
                                                  
                                                  <!-- check in settings -->
                                                  <div class="gray box section editbaseobjectdetails">
                	                                  <div class="section-header">{!$Label.MA_Check_In_Settings}</div>
                                                      <div class="section-body box">
                                                          <table style="width:100%" cellpadding="5" cellspacing="0">
                                                              <tr>
                                                              	<td style="width:10%;"><b>{!$Label.MA_Post_To}</b></td>
                                                              	<td style="width:40%;">
                                                              		<select class='checkin-postto combobox'>
                                                              			<option value='Chatter'>{!$Label.MA_Chatter}</option>
                                                              			<option value='Task'>{!$Label.MA_Task}</option>
                                                              			<option value='Event'>Event</option>
                                                              			<option value='Chatter|Task'>{!$Label.MA_Chatter_Task}</option>
                                                              			<option value='Chatter|Event'>Chatter &amp; Event</option>
                                                              		</select>
                                                              	</td>
                                                              	<td style="width:10%;"><b>{!$Label.MA_Verification_Distance}</b></td>
                                                              	<td style="width:40%;">
                                                              		<input type='text' class='verification-distance' style='width: 50px;' />
                					                            	<select class='verification-unit combobox'>
                					                            		<option value='ft'>{!$Label.MA_Feet}</option>
                					                            		<option value='m'>{!$Label.MA_Meters}</option>
                					                            		<option value='km'>{!$Label.MARoutes_Kilometers}</option>
                					                            		<option value='mi'>{!$Label.MARoutes_Miles}</option>
                					                            	</select>
                                                              	</td>
                                                              </tr>
                                                              <tr>
                                                              	<td><b>{!$Label.MA_Chatter_Body}</b></td>
                                                              	<td><textarea class='chatter-body' rows="4" style='width: 80%;'></textarea></td>
                                                              	<td><b>{!$Label.MA_Verification_Required}</b></td>
                                                              	<td><input type='checkbox' class='verification-required' /></td>
                                                              </tr>
                                                              <tr>
                                                              	<td colspan="4">
                                                              	    <table style="color: #757575;" cellpadding="2" class="chatter-post-merge-fields">
                                                              	        <tr>
                                                              	            <td>{tooltip1}</td>
                                                              	            <td>=</td>
                                                              	            <td>Value of Tooltip 1 </td>
                                                              	            
                                                              	            <td>{distance-meters}</td>
                                                              	            <td>=</td>
                                                              	            <td>Distance in Meters (Same as {distance})</td>
                                                              	            
                                                              	            <td>{accuracy-meters}</td>
                                                              	            <td>=</td>
                                                              	            <td>Accuracy in Meters</td>
                                                              	        </tr>
                                                              	        <tr>
                                                              	            <td>{lat}</td>
                                                              	            <td>=</td>
                                                              	            <td>Latitude on Check In</td>
                                                              	            
                                                              	            <td>{distance-kilometers}</td>
                                                              	            <td>=</td>
                                                              	            <td>Distance in Kilometers</td>
                                                              	            
                                                              	            <td>{accuracy-kilometers}</td>
                                                              	            <td>=</td>
                                                              	            <td>Accuracy in Kilometers</td>
                                                              	        </tr>
                                                              	        <tr>
                                                              	            <td>{long}</td>
                                                              	            <td>=</td>
                                                              	            <td>Longitude of Check In</td>
                                                              	            
                                                              	            <td>{distance-miles}</td>
                                                              	            <td>=</td>
                                                              	            <td>Distance in Miles</td>
                                                              	            
                                                              	            <td>{accuracy-miles}</td>
                                                              	            <td>=</td>
                                                              	            <td>Accuracy in Miles</td>
                                                              	        </tr>
                                                              	        <tr>
                                                              	            <td>{distance}</td>
                                                              	            <td>=</td>
                                                              	            <td>Distance in Meters</td>
                                                              	            
                                                              	            <td>{distance-feet}</td>
                                                              	            <td>=</td>
                                                              	            <td>Distance in Feet</td>
                                                              	            
                                                              	            <td>{accuracy-feet}</td>
                                                              	            <td>=</td>
                                                              	            <td>Accuracy in Feet</td>
                                                              	        </tr>
                                                              	        <tr>
                                                              	            <td></td>
                                                              	            <td></td>
                                                              	            <td></td>
                                                              	            
                                                              	            <td>{distance-yards}</td>
                                                              	            <td>=</td>
                                                              	            <td>Distance in Yards</td>
                                                              	            
                                                              	            <td>{accuracy-yards}</td>
                                                              	            <td>=</td>
                                                              	            <td>Accuracy in Yards</td>
                                                              	        </tr>
                                                              	        <tr>
                                                              	            <td colspan="6">
                                                              	                *All distances are rounded to 2 decimal places
                                                              	            </td>
                                                              	        </tr>
                                                              	    </table>
                                                              	</td>
                                                              </tr>
                                                          </table>
                                                      </div>
                                                  </div>
                                                  
                                              </div>
                                          </td>
                                      </tr>
                                </table>
                                
                
                                
                                <!-- Buttons  -->
                                <div class='buttons-edit' style='display:none;'>
                                    <input type='button' class='savebtn MAbutton button-blue' value='Save' />
                                    <!--<input type='button' class='suggestbtn MAbutton button-blue' value='Suggest' />-->
                                    <!--<input type='button' class='createfieldsbtn MAbutton button-blue' value='Create Fields...' style='width: 125px;' />-->
                                    <!--<input type='button' class='createpurgeworkflowsbtn MAbutton button-blue' value='Create Purge Workflows...' style='width: 200px;' />-->  
                                    <span class='msgs' style='color: red; font-size: 10px; display: none;'></span>
                                </div>
                            </div>
                            <div id="BottomTabs-3">
                                <table style="width:100%;" cellpadding="5">
                                    <tr>
                                        <td style="vertical-align:top;">
                                            <table cellpadding="5" cellspacing="0">
                                                <tr>
                                                    <td style="white-space: nowrap"><b>{!$Label.MA_Base_Object}</b></td>
                                                    <td>
                                                        <select class='existingbaseobject deletebaseobject' data='baseobject' disabled='disabled'><option value=''>{!$Label.MA_Loading}...</option></select>
                                                    </td>
                                                </tr>
                                             </table>
                                          </td>
                                      </tr>
                                </table>
                                  
                                <!-- Buttons  -->
                                <div class='buttons-delete' style='display:none;'>
                                    <input type='button' class='deletebtn MAbutton button-red' value='Delete' />
                                    <span class='msgs' style='color: red; font-size: 10px; display: none;'></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div id="dialog-SQTree" title="Saved Queries" style="display:none;" >
            <div id="SQTree" style="padding-top:3px;width:95%;height:auto;"></div>
        </div>
        
        <!-- Create Fields Popup -->
        <div id='dialog-createfields' style='display:none;'>
        	
        	<!-- Header -->
        	<h2>{!$Label.MA_Create_Fields}</h2>
        	
        	<!-- Spacer -->
        	<div style='height: 10px;'>&nbsp;</div>
        	
        	<!-- Field Table -->
        	<div id='dialog-createfields-table-wrapper' class='loadmask-wrapper'>
        		<table id='dialog-createfields-table' class='grid-blue'>
        			<tr>
        				<th>{!$Label.MA_Field}</th>
        				<th style='text-align: center;'><span class='link selectall'>{!$Label.MA_All}</span> | <span class='link selectnone'>{!$Label.MA_None}</span></th>
        			</tr>
        		</table>
        	</div>
        	
        </div>
        
        <!-- Create Purge Workflows Popup -->
        <div id='dialog-createpurgeworkflows' style='display: none;'>
        	
        	<!-- Header -->
        	<h2>Delete Purge Workflows</h2>
        	
        	<!-- Spacer -->
        	<div style='height: 10px;'>&nbsp;</div>
        	
        	<!-- Deleteable Workflows Table -->
        	<div id='dialog-deletepurgeworkflows-table-wrapper' class='loadmask-wrapper' style="padding-bottom: 50px;">
        		<table id='dialog-deletepurgeworkflows-table' class='grid-blue'>
        			<tr>
        				<th>Existing Purge Workflows</th>
        				<th style='text-align: center;'></th>
        			</tr>
        		</table>
        	</div>
        	
        	<!-- Header -->
        	<h2>{!$Label.MA_Create_Purg_Workflows}</h2>
        	
        	<!-- Spacer -->
        	<div style='height: 10px;'>&nbsp;</div>
        	
        	<!-- Createable Workflows Table -->
        	<div id='dialog-createpurgeworkflows-table-wrapper' class='loadmask-wrapper'>
        		<table id='dialog-createpurgeworkflows-table' class='grid-blue'>
        			<tr>
        				<th>{!$Label.MA_Createable_Purge_Workflows}</th>
        				<th style='text-align: center;'><span class='link selectall'>{!$Label.MA_All}</span> | <span class='link selectnone'>{!$Label.MA_None}</span></th>
        			</tr>
        		</table>
        	</div>
        	
        </div>
        
        <!-- Templates -->
        <div id='templates' style='display: none;'>
        	
        	<!-- Row Templates -->
        	<table>
        		<tr class='createablefield-row'>
        			<td class='createablefield-label'></td>
        			<td class='createablefield-exists'></td>
        		</tr>
        	</table>
        	
        </div>
    </apex:outputPanel>
    
    
     <div style="{!IF(hasMapAnythingLiveLicense,'display: none;','')}">
        <h3>This Saleforce organization has no MapAnything Live license</h3>
    </div>
    
</apex:page>