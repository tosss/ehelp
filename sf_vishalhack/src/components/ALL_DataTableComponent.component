<!--
/*------------------------------------------------------------
Author:      Jerick Lauio   
Company:     Cloud Sherpas
Description: A generic data table component to display SObject results based on set on attributes with filters and navigation
History
02/04/15     Jerick Laurio          Drafted
03/16/15     Jerick Laurio          Created
03/20/15     Jerick Laurio          Cleaned and refactored
03/31/15     Samuel Oberes          AI 200 - fixed broken Follow/Unfollow functionality in 'Tasks I'm Following' tab
------------------------------------------------------------*/
-->
<apex:component controller="ALL_DataTableComponent_Controller" extensions="ALL_DataTableComponent_Extension" allowDML="true">
    
    <!-- object attributes -->
    <apex:attribute name="objectLabelName" type="String" required="true" assignTo="{!objLabelName}"
                    description="The label name of the object being queried and used as label of the table."  />
    <apex:attribute name="objectApiName" type="String" required="true" assignTo="{!objApiName}"
                    description="The API name of the object being queried"  />
    <apex:attribute name="objectIdPrefixCode" type="String" required="true" assignTo="{!objIdPrefixCode}"
                    description="The record id prefic code of the object being queried"  />
    <apex:attribute name="objectEntityId" type="String" required="true" assignTo="{!objEntityId}"
                    description="The id of the sObject being queried"  />
    
    <!-- query attributes -->
    <apex:attribute name="queryString" type="String" required="true" assignTo="{!selectQueryString}"
                    description="A soql select query string that will populate the table. SYNTAX:SELECT <fields> FROM sObject'" />
    <apex:attribute name="whereClauseString" type="String" required="false" assignTo="{!selectWhereClauseString}"
                    description="A soql where clause for the 'queryString'. SYNTAX:WHERE <condition/s>e.g.WHERE City='Manila' AND Country='Philippines'" />
    <apex:attribute name="queryLimit" type="Integer" required="false" assignTo="{!queryLimitNum}"
                    description="Record limit of the query result" />
    <apex:attribute name="orderClause" type="String" required="false" assignTo="{!selectOrderString}"
                    description="A soql ORDER BY clause of the query. SYNTAX:ORDER BY <field><order> e.g. ORDER BY Id DESC, CreatedDate ASC" />
    
    <!--  ui attributes -->
    <apex:attribute name="showDebug" type="Boolean" description="A flag to toggle debug display panel" default="false"/>
    <apex:attribute name="showEditLink" type="Boolean" description="A flag to toggle edit record button per table row" default="false"/>
    <apex:attribute name="showNewButton" type="Boolean" description="A flag to toggle new record button on top of table" default="false"/>
    <apex:attribute name="showFollowLink" type="Boolean" description="A flag to toggle follow link per table row" default="false"/>
    <apex:attribute name="selectable" type="Boolean" description="A flag to toggle selection of records via checkboxes" default="false" />
    <apex:attribute name="allowMultiSelect" type="Boolean" description="A flag to toggle mult-iselection of records via checkboxes" default="false" />
    <apex:attribute name="objectConsoleOpenInSubTab" type="Boolean" required="false" assignTo="{!objConsoleOpenInSubTab}" default="false"
                    description="Controls if the links on the table are opened in a sub tab or in its own tab"   />
    <apex:attribute name="rowsPerPage" type="Integer" required="false" assignTo="{!recordsPerPage}"
                    description="This controls the number of rows to be show on the table. This overrides the default value set from the custom setting." />
    
    <!-- column attributes -->
    <apex:attribute name="tableColumnFieldsetName" type="String" required="false" assignTo="{!columnFieldSetName}"
                    description="This is the fieldset api name that will list the fields to be used by the data table column" />
    
    <!--  filter attributes -->
    <apex:attribute name="showFilterSection" type="Boolean" default="false" assignTo="{!showFilter}"
                    description="A flag to toggle filter display panel" />
    <apex:attribute name="filterObjectFieldsetName" type="String" assignTo="{!filterFieldSetName}"
                    description="This is the name of the fieldset that will contain the fields to be used by the filter section" />
    
    <apex:attribute name="showEditAllAttr" type="Boolean" required="false" assignTo="{!showEditAll}"
                    description="A flag to toggle editability of records" />

    <apex:attribute name="hidePageBlockMode" type="Boolean" default="false" required="false" 
                    description="A flag to toggle pageBlock mode and outputPanel" />

    <apex:attribute name="allowInlineEditing" type="Boolean" required="false" assignTo="{!allowInlineEdit}"
                    description="A flag to toggle inline editability of records"  />
    
    <!-- other attributes -->
    <apex:attribute name="isFollowedTable" type="Boolean" required="false" description="A flag to toggle debug display panel" default="false"/>
    <style type="text/css">
        .apexp .detailList .list .headerRow th 
        {
            white-space:normal;
            text-align:left;
        }

        .refreshButton
        {
            background: url({!$Resource.sync}) no-repeat;
            width:  22px;
            height: 20px;
            background-position: 0px 0px;
            /*vertical-align: bottom;*/
        }

        .refreshButton:hover
        {
            background-position: 0px -22px;
        }

        input.btn[value="Change Owner"]
        {
            display:none;
        }

        input.btn[Name="new"]{
            display:none;
        }
    </style>

    <!-- front-end navigation script -->
    <script>
        function redirectIfOnConsole(config)
        {
            var url = '/' + config.recordId ;
            alert (url);
            if(sforce.console.isInConsole())
            {
                if ( config.openInSubTab ) 
                {
                    //open in sub tab
                }
                else 
                {
                    sforce.console.openPrimaryTab(null,url,true,'','','');
                }
            }
            else
            {
                navigateToUrl(url,null,'new');
            }
        }
        
        function getNewButtonSfdcUrl ( config ) 
        {
            var browserNewButonLink = '/setup/ui/recordtypeselect.jsp?ent=' + config.sObjectType + '&retURL=/' + config.sObjectPrefix + '/o&save_new_url=/' + config.sObjectPrefix + '/e?retURL=/' + config.sObjectPrefix + '/o';
            
            if (config.openInSubTab) 
            {
                //open in sub tab
                //browserNewButonLink
            }
            
            return browserNewButonLink;
        }

    </script>

    <!-- script and stylesheet for freezing header of pageBlockTable -->
    <apex:stylesheet value="{!URLFOR($Resource.IMP_Project_css)}"/>
    <!--<apex:stylesheet value="{!URLFOR($Resource.IMP_Milestone_SR,'/img/IMP_Milestone.css')}"/>-->

    <!-- vars -->
    <apex:variable var="showInEditMode" value="{!IF(AND(NOT(isEdit), showEditAllAttr), '', 'display:none;')}"/> <!-- hide_component -->
    <apex:variable var="hideButtonInViewMode" value="{!IF(AND(isEdit, showEditAllAttr), '', 'display:none !important;')}"/> <!-- hide_button -->

    <apex:pageMessages ></apex:pageMessages>

    <!-- Loader actionStatus -->
    <apex:outputPanel >
        <apex:actionStatus id="loader">
            <apex:facet name="start">
                <div class="waitingSearchDiv outerGrayedPanel" id="casActionProcessing"> 
                    <div class="waitingHolder innerProcessPanel">
                        <br />
                        <img class="waitingImage" src="/img/loading.gif" title="Please Wait..." />   
                        <span class="waitingDescription">Loading...</span>
                    </div>
                </div>
            </apex:facet>
        </apex:actionStatus>
    </apex:outputPanel>

    

    <!-- debug panel -->
    <apex:outputPanel rendered="{!showDebug}" id="debugPanel">
        <apex:outputPanel rendered="{!isDisplayTable}">
            OBJECT ATTRIBIUTES: <br />
            objectLabelName: {!objectLabelName}<br/>
            objectApiName: {!objectApiName}<br/>
            objectIdPrefixCode: {!objectIdPrefixCode}<br/>
            objectEntityId: {!objectEntityId}<br/>
            <br/><br/><br/>
            QUERY ATTRIBUTES: <br />
            queryString: {!queryString}<br/>
            whereClauseString: {!whereClauseString}<br/>
            queryLimit: {!queryLimit}<br/>
            orderClause: {!orderClause}<br/>
            <br/><br/><br/>
            UI ATTRIBUTES: <br />
            showDebug: {!showDebug}<br/>
            showEditLink: {!showEditLink}<br/>
            showNewButton: {!showNewButton}<br/>
            showEditAllAttr: {!showEditAllAttr} <br />
            isEdit: {!isEdit} <br />
            <br/><br/><br/>
            TABLE VARIABLES: <br />
            pageNumber: {!pageNumber}<br/>
            size: {!size}<br/>
            noOfRecords: {!noOfRecords}<br/>
        </apex:outputPanel>
    </apex:outputPanel>

        
    <base target="_top" />
    <!-- main ui -->
    <apex:pageBlock id="mainPB" title="{!objectLabelName}" rendered="{!NOT(hidePageBlockMode)}">
        
        <!-- buttons section -->
        <apex:pageBlockButtons location="top" id="pbButtons"> <!-- rendered="{!showNewButton}" -->
            <input value=" New " type="button" class="btn" name="new" 
                        onclick="javascript:navigateToUrl(getNewButtonSfdcUrl({sObjectType:'{!IF(CONTAINS(objectApiName,'__c'),objectEntityId,objectApiName)}',sObjectPrefix:'{!objectIdPrefixCode}',openInSubTab:{!objConsoleOpenInSubTab}}));" 
                        style="{! IF(showNewButton, '', 'display:none;') }" />

            <apex:commandButton id="save"   value="Save" action="{!saveAndClose}" rendered="{!AND(isEdit, showEditAllAttr)}" />
            <apex:commandButton id="edit"   value="Edit" action="{!edit}" reRender="mainPB,debugPanel" 
                        status="loader" rendered="{!AND(NOT(isEdit), showEditAllAttr)}" />
            <apex:commandButton id="cancel" value="Cancel" action="{!cancelEdit}" reRender="mainPB,debugPanel" 
                        status="loader" rendered="{!AND(isEdit, showEditAllAttr)}" />
            <apex:commandButton id="inlineSave"   action="{!saveAndClose}" value="Save"   style="display:none"/>
            <apex:commandButton id="inlineCancel" action="{!cancelEdit}"   value="Cancel" style="display:none"/>

        </apex:pageBlockButtons>

        <!-- refresh button -->
        <!--<input type="button" id="RefreshButtonId" onclick="resetResultSection();setTimeout(function(){resetDataTable();},2000);" class="refreshButton" action="{!resetTable}" />-->
        <apex:commandButton id="RefreshButtonId1" 
                            style="background: url(/img/alohaSkin/sync.png) top left no-repeat;width: 22px; height: 23px; background-position: 2px 3px;" 
                            styleClass="btn refreshListButton" onclick="location.reload();" 
                            reRender="mainOP,mainPB,resultSection,filterSectionPanel" status="loader"
                            rendered="{!isFollowedTable}"/>
        <apex:commandButton id="RefreshButtonId2" 
                            style="background: url(/img/alohaSkin/sync.png) top left no-repeat;width: 22px; height: 23px; background-position: 2px 3px;" 
                            styleClass="btn refreshListButton" onclick="resetResultSection();" 
                            reRender="mainOP,mainPB,resultSection,filterSectionPanel" status="loader"
                            rendered="{!NOT(isFollowedTable)}"/>
        <apex:actionFunction name="resetResultSection" action="{!resetTable}" reRender="resultSection,filterSectionPanel" status="loader" />
        <br /><br />

        <!-- filter section -->
        <apex:outputPanel id="filterSectionPanel" rendered="{!showFilterSection}">
            <apex:repeat value="{!filterFieldList}" var="filterField" >
                <apex:outputLabel value="{!filterField.label}" for="filter_input"/>
                <apex:inputField id="filter_input" value="{!filterObject[filterField.apiName]}" rendered="{!IF(filterField.isMultiPicklist, false, true)}"/>
                <apex:selectList size="1" value="{!filterObject[filterField.apiName]}" rendered="{!IF(filterField.isMultiPicklist, true, false)}">
                    <apex:selectOptions value="{!filterField.picklistValues}"/>
                </apex:selectList>
                <!---->
            </apex:repeat>
            <apex:commandButton value="Filter Result" action="{!refreshQuery}" reRender="resultSection,filterSectionPanel" status="loader"/>
            <apex:commandButton value="Reset" action="{!resetTable}" reRender="resultSection,filterSectionPanel" status="loader"/>
        </apex:outputPanel>

        <!-- table section -->
        <apex:pageBlockSection id="resultSection" collapsible="true" columns="1" ><!-- rendered="{!isDisplayTable}"  -->
            <apex:pageBlockTable id="pbt" value="{!recordsPerObj.selectSObjList}" var="recordList" rendered="{!isDisplayTable}"><!-- {!recordsPerObj.sObjListsize > 0} -->

                <!-- checkbox column -->
                <apex:column rendered="{!AND(isEdit, selectable)}">
                    <apex:facet name="header">
                        <!--<apex:inputCheckbox />-->
                    </apex:facet>
                    <apex:inputText value="{!recordList.sObj['Id']}" styleClass="objectId" style="display:none;" />
                </apex:column>

                <!-- edit column -->
                <apex:column rendered="{!showEditLink}">
                    <apex:outputLink value="/{!recordList}/e" styleClass="">Edit</apex:outputLink>>
                </apex:column>

                <!-- custom link column -->
                <apex:column rendered="{!showFollowLink}" headerValue="Follow Icon" >
                    
                    <!-- for reference: https://adpdealerservices--empcom--c.cs15.visual.force.com/img/feeds/follow_sprite.png -->
                    <img id="imgFollow"   onClick="followHandler(this, '{!recordList.sObj['Id']}');   return false;" 
                            title="Click to Follow" style="height:16px; width:16px; {!IF(recordList.isFollowed, 'display: none;', '')}" 
                            src="{!URLFOR($Resource.status_icons,'checkmark_64.png')}" />
                    <img id="imgUnfollow" onClick="unfollowHandler(this, '{!recordList.sObj['Id']}'); return false;" 
                            title="Following: Click to Unfollow" style="height:16px; width:16px; {!IF(recordList.isFollowed, '', 'display: none;')}" 
                            src="{!URLFOR($Resource.status_icons,'forbidden_64.png')}" />
                </apex:column>

                <!-- records iteration -->
                <apex:repeat id="rptr" value="{!recordsPerObj.fieldList}" var="fieldAPIName" >
                    <apex:column >
                        <apex:facet name="header">
                            {!IF(fieldAPIName.apiName=='Project_Activity__r.Description__c', 'Activity Description', IF(fieldAPIName.apiName=='Description__c', 'Task Description', IF(fieldAPIName.apiName=='Actual_Time_Spent__c', 'Actual Days Spent', fieldAPIName.label)))}
                        </apex:facet>

                        <!-- <div onclick="console.log('{!$Component.mainPB.resultSection.pbt.rptr}');"> -->
                        <apex:outputField value="{!recordList.sObj[fieldAPIName.apiName]}" 
                                rendered="{!IF(AND(NOT(isEdit), fieldAPIName.apiName!='Name', fieldAPIName.apiName!='CaseNumber'), true, false)}" >
                            <apex:inlineEditSupport event="ondblclick" showOnEdit="inlineSave, inlineCancel" hideOnEdit="edit" 
                                    disabled="{!IF(OR(allowInlineEditing==false, fieldAPIName.apiName=='Project_Activity__r.Description__c', fieldAPIName.apiName=='Description__c'), true, false)}" />
                        </apex:outputField>
                        
                        
                        <apex:outputLink value="/{!recordList.sObj['Id']}" 
                                rendered="{!IF(AND(NOT(isEdit), OR(fieldAPIName.apiName=='Name', fieldAPIName.apiName=='CaseNumber')), true, false)}" >
                                    {!recordList.sObj[fieldAPIName.apiName]}
                        </apex:outputLink>
                        
                        <c:IMP_HideCurrentDate >
                            <apex:inputField value="{!recordList.sObj[fieldAPIName.apiName]}" 
                                    rendered="{!IF(AND(isEdit, fieldAPIName.apiName!='Planned_Start_Date__c', fieldAPIName.apiName!='Planned_End_Date__c', fieldAPIName.apiName!='Project_Activity__r.Description__c', fieldAPIName.apiName!='Description__c'), true, false)}" 
                                    styleClass="{!fieldAPIName.apiName}" />
                        </c:IMP_HideCurrentDate>
                            <apex:outputField value="{!recordList.sObj[fieldAPIName.apiName]}" 
                                    rendered="{!IF(AND(isEdit, OR(fieldAPIName.apiName=='Planned_Start_Date__c', fieldAPIName.apiName=='Planned_End_Date__c', fieldAPIName.apiName=='Project_Activity__r.Description__c', fieldAPIName.apiName=='Description__c')), true, false)}"/>
                        <!-- </div> -->

                    </apex:column>
                </apex:repeat>

            </apex:pageBlockTable>
            
            <apex:panelGrid columns="7" rendered="{!isDisplayTable}">
                <apex:commandButton status="fetchStatus" reRender="resultSection" value="|<" action="{!first}" disabled="{!!hasPrevious}" title="First Page"/>
                <apex:commandButton status="fetchStatus" reRender="resultSection" value="<" action="{!previous}" disabled="{!!hasPrevious}" title="Previous Page"/>
                <apex:commandButton status="fetchStatus" reRender="resultSection" value=">" action="{!next}" disabled="{!!hasNext}" title="Next Page"/>
                <apex:commandButton status="fetchStatus" reRender="resultSection" value=">|" action="{!last}" disabled="{!!hasNext}" title="Last Page"/>
                
                <apex:outputText rendered="{!NOT(ISBLANK(recordsPerObj.sObjListsize))}">{!(pageNumber * size)+1-size}-{!IF((pageNumber * size)>noOfRecords, noOfRecords,(pageNumber * size))} of {!noOfRecords}</apex:outputText>
                <apex:outputPanel style="color:#4AA02C;font-weight:bold">
                    <apex:actionStatus id="fetchStatus" startText="Fetching..." stopText=""/>
                </apex:outputPanel>
            </apex:panelGrid>
            <apex:outputText id="NoRecordsText" value="No records to display." rendered="{!NOT(isDisplayTable)}"/>
        </apex:pageBlockSection>
      
    </apex:pageBlock>

    <!-- JS CUSTOM FUNCS -->
    <apex:outputPanel id="opScripts">
        <script>
            $j = jQuery.noConflict();
            function followHandler(control, recordId)
            {
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ALL_DataTableComponent_Extension.followItem}', 
                    recordId,
                    function (result, event) 
                    {
                        if (event.status) 
                        {
                            control.style.display = "none";
                            
                            var tdParent = $j(control).closest('td');
                            var unfollowIcon = $j(tdParent).find("img#imgUnfollow");
                            unfollowIcon.css({
                                "display" : "inline"
                            });

                        }
                    }
                );
                return false;
            }

            function unfollowHandler(control, recordId)
            {
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.ALL_DataTableComponent_Extension.unFollowItem}', 
                    recordId,
                    function (result, event) 
                    {
                        if (event.status) 
                        {
                            control.style.display = "none";
                            
                            var tdParent = $j(control).closest('td');
                            var followIcon = $j(tdParent).find("img#imgFollow");
                            followIcon.css({
                                "display" : "inline"
                            });

                        }
                    }
                );
                return false;
            }
        </script>
    </apex:outputPanel>

</apex:component>