<!--
/*---------------------------------------------------------
Author: Venkata Shrivol
Description: Adding the Products to SubProject-Sites 
			 which are associated with a SubProject  
History
04/20/15    Venkata Shrivol      Created
08/06/15    Venkata Shrivol      Modified the page to refresh when the page closes
-----------------------------------------------------------*/
-->

<apex:page controller="IMP_AddProductsToSite_Extension" showHeader="false" sidebar="false">
    
	<apex:includeScript value="{!URLFOR($Resource.jQuery, 'js/jquery-1.10.2.min.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.jQuery, 'js/jquery-ui-1.10.4.custom.min.js')}" />
	<apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js" />
	<apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.min.js" />
	<apex:includeScript value="/soap/ajax/18.0/connection.js" />
	<apex:includeScript value="/soap/ajax/18.0/apex.js" />
    
	<!-- <apex:includeScript value="{!URLFOR($Resource.IMP_CustomError_js)}" /> -->
	<apex:stylesheet value="{!URLFOR($Resource.IMP_AddProductsToSite_css)}" />
	<apex:stylesheet value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.6/themes/ui-lightness/jquery-ui.css" />
	
    <script type="text/javascript">
    // Loading icon in the text box 
    var __InputBoxLoadingIcon = "{!URLFOR($Resource.InputBoxLoadingIcon)}";
    var ProductName = null;
    var j$; if(!j$) { j$ = jQuery.noConflict(); }
    var prodId = '';
    var BackgroundURL = "url("+__InputBoxLoadingIcon+")";
    
    j$(document).ready(
        function(){
            init();
            /*j$("#selectProduct").change(function(){
					updateProductListAF(prodId);
				});*/
        }
    );
    
    function init()
    {
        var productsList = j$("#selectProduct").autocomplete({
            source: function(request, response){
                var searchterm = (request.term && request.term.length > 1 ? request.term : "");
                IMP_AddProductsToSite_Extension.findProduct(searchterm, function(result, event){
                    var AllProducts = j$.map(result, function(item){
                        return ({
                            label:ConvertEncodedChars(item.Name+' => '+item.Solution__r.Name+' => '+item.Solution__r.Question_Category__r.Name), 
                            salesforceid:item.Id });
                    });
                    if(AllProducts.length>0){
                        response(AllProducts);
                    }
                });
            },
            minLength: 0,
            select: function(event,ui){
                prodId = ui.item.salesforceid;
                j$(this).val('');
                event.preventDefault();
                updateProductListAF(prodId);
            },
            search: function () { 
                j$(this).css("background",BackgroundURL+" no-repeat right center #fff"); 
            },
            open: function () { j$(this).css("background","#fff"); }
        });
    }
    
    function clearSelect(){
        j$("#selectProduct").val('');
    }
    
    function selectAllCheckboxes(elem)
    {
        if(elem.checked){
            j$(".rowCheckbox").each(function(){
                this.checked=true;
            });
        }else{
            j$(".rowCheckbox").each(function(){
                this.checked=false;
            });
        }
    }
    
    function clearCheckbox(){
        $elem = j$('[id$="headerCheckbox"]');
        $elem.attr("checked",false);
    }
    
    function ConvertEncodedChars(text)
    {
    	var temp = document.createElement("div");
	    temp.innerHTML = text;
	    var result = temp.childNodes[0].nodeValue;
	    temp.removeChild(temp.firstChild)
	    return result;
    }
    function closeAndRefresh()
    {
    	
    	if(j$('table[id$=siteProdTable]').length== 0)
    	{
    		window.close();
    	}
    	else
    	{
    		window.opener.location.reload();
    		window.close();
    	}
    }
    
	</script>
	<apex:form id="siteFormId">
		
		
		<!-- <apex:actionFunction action="{!displayErrorMessage}"
			name="errorDisplay">
			<apex:pageMessages id="errorMsg" />
		</apex:actionFunction> -->
		<apex:actionFunction name="updateProductListAF"
			action="{!updateProductList}" onbeforedomupdate="clearSelect();"
			rerender="prodBlock,createdProdPanel" status="loaderStatus">
			<apex:param value="" name="prodId" />
		</apex:actionFunction>

		<apex:actionFunction name="removeProductAF" action="{!removeProduct}"
			rerender="prodBlock,createdProdPanel" status="loaderStatus">
			<apex:param value="" name="prodId" />
		</apex:actionFunction>

		<apex:actionstatus id="loaderStatus">
			<apex:facet name="start">
				<div class="waitingSearchDiv" id="el_loading"
					style="background-color: #fbfbfb; height: 100%; opacity: 0.65; width: 100%;">
					<div class="waitingHolder" style="top: 270px; width: 91px;">
						<img class="waitingImage" src="/img/loading.gif"
							title="Please Wait..." /> <span class="waitingDescription">Loading...</span>
					</div>
				</div>
			</apex:facet>
		</apex:actionstatus>

		<!--  First PageBlock of Adding Site to Products  -->
		<apex:pageBlock title="Add Products to SubProjectSites" tabStyle="SubProject__c" id="main" mode="inlineEdit">
			<!-- Step 1 Page Block Section -->
				<apex:pageMessages id="errorMsg"/>
				<div style="height: 140px;">
					<div style="float:left; margin-right:10px;">
						<apex:outputLabel value="Choose SubProject-Site" styleClass="multiPicklistStep" /><br/>
						<apex:selectList id="site" value="{!siteRecIds}" multiselect="true" size="6" styleClass="siteFilter">
						<apex:selectOptions value="{!Sites}" /></apex:selectList>
					</div>
					
					<div style="">
						<apex:outputLabel value="Choose Product(s)" styleClass="multiPicklistStep" /><br/>
						<input type="text" id="selectProduct" style="min-width: 225px;" />
					</div>
					
				</div>
				
				
			
			<!-- Buttons Section -->
			<apex:pageBlockButtons location="bottom">
				<!-- <apex:commandButton Id="addButton" value="Add Products" title="to add ProductsToSite" action="{!prepareProductList}" reRender="prodBlock"/> -->
				<apex:commandButton Id="createButton" value="Create SiteProducts"
					title="to Create SiteProducts" action="{!addSiteProducts}"
					rerender="siteProdTable,prodBlock,createdProdPanel,errorMsg" status="loaderStatus" />
				<!-- For Close button -->
				<apex:commandButton value="Close" onclick="closeAndRefresh();" />
			</apex:pageBlockButtons>

			<apex:outputPanel id="prodBlock">
				<apex:pageBlockSection title="Selected List of Products"
					 columns="1" rendered="{!IF(productList.size > 0, true, false)}">
					<apex:pageBlockTable value="{!productList}" var="prod"
						title="Selected Products" id="prodTable">
						<apex:column headerValue="Remove">
							<a href="javascript:void(0);"
								onclick="removeProductAF('{!prod.prodId}');">Remove</a>
						</apex:column>
						<apex:column headerValue="Product" value="{!prod.prodName}"></apex:column>
						<apex:column headerValue="Solution" value="{!prod.solutionName}"></apex:column>
						<apex:column headerValue="DealershipNeed"
							value="{!prod.dealershipNeedName}"></apex:column>
					</apex:pageBlockTable>
				</apex:pageBlockSection>
			</apex:outputPanel>
			
		</apex:pageBlock>
		
		
		<apex:outputPanel id="createdProdPanel">
			<!-- Second Page Block of displaying SiteProducts records-->
			<apex:pageBlock title="Created SiteProducts" tabStyle="SubProject__c" rendered="{!IF(siteProductList.size > 0, true, false)}">
				<apex:pageBlockTable value="{!siteProductList}" var="siteProd"
					title="Created SiteProducts" id="siteProdTable">
					<apex:column >
						<apex:facet name="header">
							<apex:inputCheckbox id="headerCheckbox"
								disabled="{!IF(siteProductList.size==0, true, false)}"
								onclick="selectAllCheckboxes(this);" />
						</apex:facet>
						<apex:inputCheckbox styleClass="rowCheckbox"
							value="{!siteProd.toDelete}" />
					</apex:column>
					<apex:column headerValue="Sub-Project Site"
						value="{!siteProd.siteCMFName}"></apex:column>
					<apex:column headerValue="Product" value="{!siteProd.productName}"></apex:column>
				</apex:pageBlockTable>
				<apex:pageBlockButtons location="bottom">
					<apex:commandButton Id="deleteButton" value="Delete SiteProducts"
						title="to delete SiteProducts" action="{!deleteSiteProducts}"
						rerender="createdProdPanel,errorMsg" oncomplete="clearCheckbox();"
						status="loaderStatus" />
					<!-- For Close button -->
					<apex:commandButton value="Close" onclick="closeAndRefresh();" />
				</apex:pageBlockButtons>
			</apex:pageBlock>
		</apex:outputPanel>
	</apex:form>
</apex:page>