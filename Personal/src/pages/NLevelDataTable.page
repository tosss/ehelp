<apex:page sidebar="false" >
    <html ng-app="DataTableApp">        
        <apex:includeScript value="/soap/ajax/33.0/connection.js"/>
        <apex:includeScript value="/soap/ajax/33.0/apex.js"/>
        <apex:includeScript value="{!URLFOR($Resource.jQuery, 'js/jquery-1.10.2.min.js')}" />
        <apex:includeScript value="{!URLFOR($Resource.jQuery, 'js/jquery-ui-1.10.4.custom.min.js')}" />
        <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.16/angular.js"/>
        <style>
            .pointer
            {
            cursor:pointer;
            }
            .focussed
            {
            background-color: #58A6E8;
            color: white;
            }
            
            .required
            {
            border-left:solid red 4px;
            }
            
            hyperlink:hover
            {
            text-decoration: underline;
            } 
        </style>
        
        <script>
        
        var j$= jQuery.noConflict();
        j$(document).ready(function(){
            j$('body').on('dblclick','.dataHolder',function(){
                
                j$(this).find('.viewMode').each(function(){
                    if(j$(this).attr('updateable')=='true')
                    {
                        j$(this).hide();
                        j$(this).siblings('.editMode').show();
                        j$(this).siblings('.editMode').find('#inputValue').focus();
                    }
                });
            });
            
            j$('body').on('click','#scrollTop',function(){
                window.scrollTo(0,0);
            });
            
            j$('body').on('click','#scrollBottom',function(){
                window.scrollTo(0,j$(window).height()*1000);
            });
            
            j$('body').on('blur','.required',function(){
                if(j$(this).val()==null || j$(this).val()==undefined || j$(this).val().trim()=='')
                {
                    j$(this).focus();
                }
            });
            
            j$('body').on('blur','#inputValue',function(){
                var tagName = j$(this).parent().parent().prop('tagName');
                if(tagName == 'LOOK-UP')
                {
                    var value = j$(this).val();
                    var Id='';
                    j$(this).siblings('.lookupMode').find('li').each(function(){
                        if(j$(this).html() == value)
                        {
                            Id = j$(this).attr('value');
                        }
                    });
                    j$(this).closest('td').find('#outputValue').each(function(){
                        j$(this).html(value);
                        j$(this).attr('href','/'+Id);
                    });
                }
            });
            
            j$('body').on('click','.lookupMode',function(){
                j$(this).prev().focus();
            });
            
            j$('body').on('blur','.editMode',function(){
                var isRequired = j$(this).find('#inputValue').attr('class');
                isRequired = isRequired.indexOf('required');
                isRequired = (isRequired  >= 0);
                var isEmpty = j$(this).find('#inputValue').val();
                isEmpty = ( isEmpty==undefined || isEmpty==null || isEmpty.trim()=='' );
                if(!isRequired || !(isRequired && isEmpty))
                {
                    if(j$('.focussed').html()==undefined)
                    {
                        j$(this).hide();
                        j$(this).siblings('.viewMode').show();
                        j$(this).siblings('.viewMode').find('output-field').css('color','orange');
                    }
                }
            });
            
            j$('body').on('click','.createRecordButton',function(){
                var valid = true;
                var type= j$(this).attr('type');
                j$(this).closest('table').find('.required').each(function(){
                    if( j$(this).is(':visible') && (j$(this).val()==null || j$(this).val()==undefined || j$(this).val().trim()==''))
                    {
                        valid = false;
                        j$(this).focus();
                    }
                });
            });
            
        });
        
        var dataTableApp = angular.module('DataTableApp',[]);
        
        //Controller
        angular.module("DataTableApp").controller("pageController",function($scope,$window,$compile, $filter){
            sforce.connection.sessionId = '{!$Api.Session_ID}';
            $scope.objectname = 'Account';
            $scope.referenceArray = new Array();
            $scope.fields = new Array();
            $scope.sobjectDetail = sforce.connection.describeSObject($scope.objectname);
            var result = sforce.connection.query('select id, name from Account limit 10');
            $scope.records = result['records'];
            
            $scope.setReferences = function(type)
            {
                var valueSet = false;
                for(var i=0;i<$scope.referenceArray.length;i++)
                {
                    if($scope.referenceArray[i].type == type)
                    {
                        valueSet = true;
                    }
                }
                if(!valueSet)
                {
                    var typeValue = sforce.connection.query("select id, name from "+type+" order by name asc limit 50000");
                    $scope.referenceArray.push({type:type,values:typeValue.getArray('records')});
                }
            }
            
            for(var i=0;i<$scope.sobjectDetail.fields.length;i++)
            {
                $scope.fields.push({selected:false,sortSelected:false,massUpdate:false,sortReverse:false,showField:true,fieldDetail:$scope.sobjectDetail.fields[i]});
                if($scope.sobjectDetail.fields[i].type=='reference')
                {
                    $scope.setReferences($scope.sobjectDetail.fields[i].referenceTo);
                }
            }
            
        });
        
        //Isolated Directives
        angular.module("DataTableApp").directive("inputField",function($compile){
            return {
                template:'<span ng-switch on="type" >'+
                '<span ng-switch-when="date"><input ng-class={required:required(field)} type="datetime-local" ng-model="value[field.fieldDetail.name]" id="inputValue" /></span>'+
                '<span ng-switch-when="datetime"><input ng-class={required:required(field)} type="datetime-local" ng-model="value[field.fieldDetail.name]" id="inputValue" /></span>'+
                '<span ng-switch-when="currency"><input ng-class={required:required(field)} type="currency" ng-model="value[field.fieldDetail.name]" id="inputValue" /></span>'+
                '<span ng-switch-when="int"><input ng-class={required:required(field)} min="1" type="number" ng-model="value[field.fieldDetail.name]" id="inputValue" /></span>'+
                '<span ng-switch-when="number"><input ng-class={required:required(field)} min="1" type="number" ng-model="value[field.fieldDetail.name]" id="inputValue" /></span>'+
                '<span ng-switch-when="double"><input ng-class={required:required(field)} min="0.01" type="number" ng-model="value[field.fieldDetail.name]" step="any" id="inputValue" /></span>'+
                '<span ng-switch-when="id"><input ng-class={required:required(field)} type="text" pattern=".{15,18}" ng-model="value[field.fieldDetail.name]" id="inputValue" /></span>'+
                '<span ng-switch-when="phone"><input ng-class={required:required(field)} type="phone" ng-model="value[field.fieldDetail.name]" id="inputValue" /></span>'+
                '<span ng-switch-when="url"><input ng-class={required:required(field)} type="url" ng-model="value[field.fieldDetail.name]" id="inputValue" /></span>'+
                '<span ng-switch-when="picklist"><select ng-class={required:required(field)} ng-model="value[field.fieldDetail.name]" id="inputValue"><option ng-repeat="option in picklistvalues" ng-show="option.active" ng-bind="option.label">{{option.label}}</option></select></span>'+
                '<span ng-switch-when="email"><input ng-class={required:required(field)} type="email" ng-model="value[field.fieldDetail.name]" id="inputValue"/></span>'+
                '<span ng-switch-when="reference"><look-up record="value" references="references" field="field" type="referenceto"></look-up></span>'+
                '<span ng-switch-when="boolean"><input ng-class={required:required(field)} ng-model="value[field.fieldDetail.name]"  type="checkbox"  id="inputValue" /></span>'+ 
                '<span ng-switch-when="textarea"><textarea ng-class={required:required(field)} id="inputValue" ng-model="value[field.fieldDetail.name]"></textarea></span>'+	
                '<span ng-switch-when="address"><textarea ng-class={required:required(field)} id="inputValue" ng-model="value[field.fieldDetail.name]"></textarea></span>'+	
                '<span ng-switch-when="text"><input type="text" ng-class={required:required(field)}  ng-model="value[field.fieldDetail.name]" id="inputValue"/></span>'+
                '<span ng-switch-when="text"><input type="string" ng-class={required:required(field)} ng-model="value[field.fieldDetail.name]" id="inputValue"/></span>'+
                '<span ng-switch-default ><input type="text" ng-class={required:required(field)} ng-model="value[field.fieldDetail.name]" id="inputValue"/></span>'+
                '</span>',
                scope:{
                    type:'=',
                    value: '=',
                    picklistvalues: '=',
                    referenceto: '=',
                    field: '=',
                    references: '='
                },
                restrict:'E',
                link:function(scope,element)
                {
                    if(scope.value != null || scope.value != undefined)
                    {
                        if(scope.type=='datetime')
                        {
                            if(scope.value[scope.field.fieldDetail.name]!=null || scope.value[scope.field.fieldDetail.name]!=undefined)
                            {
                                var dateTime = scope.value[scope.field.fieldDetail.name];
                                dateTime = dateTime.replace('Z','').split('T');
                                var date = dateTime[0].split('-');
                                var time = dateTime[1].split(':');
                                var seconds = time[2].split('.');
                                scope.value = new Date(date[0],date[1],date[2],time[0],time[1],seconds[0],seconds[1]);
                            }
                            else
                            {
                                scope.value = new Date();
                            }
                            
                        }
                        else if(scope.type=='date')
                        {
                            if(scope.value[scope.field.fieldDetail.name]!=null || scope.value[scope.field.fieldDetail.name]!=undefined)
                            {
                                var dateTime = scope.value[scope.field.fieldDetail.name];
                                dateTime = dateTime.replace('Z','').split('T');
                                var date = dateTime[0].split('-');
                                scope.value[scope.field.fieldDetail.name] = new Date(date[0],date[1],date[2],0,0,0,0);
                            }
                            else
                            {
                                scope.value[scope.field.fieldDetail.name] = new Date();
                            }
                            
                        }
                    }
                    
                    
                    scope.required = function(field)
                    {
                        if(field.fieldDetail.nillable=='true')
                            return false;
                        return true;
                    }
                }
            };
        });
        
        angular.module("DataTableApp").directive("lookUp",function(){
            return{
                scope:{
                    type: '=',
                    record : '=',
                    field : '=',
                    references : '='
                },
                template :'<span>'+
                '<input type="text" ng-class={required:required(field)} ng-change="updateValues();" ng-model="searchText" id="inputValue"/>'+
                '<div class="lookupMode" ng-show="autoComplete" style="z-index:3;display:block;position:absolute;background-color:white;width:234px;min-height:0px;border-top:solid black 1px;">'+
                '<ul style="list-style-type:none;padding-left:initial;display:inline-block;">'+
                '<li ng-repeat="recordValues in lookupvalues" value="{{recordValues[\'Id\']}}" ng-click="selectedValue(recordValues);" style="margin-left:1px;padding-left:4px;padding-right:4px;width:234px;border-bottom: solid black 1px;border-left: solid black 1px;border-right: solid black 1px;" ng-class="{focussed:hover}" ng-mouseenter="hover = true" ng-mouseleave="hover = false">'+
                '{{recordValues["Name"]}}'+
                '</li>'+
                '</ul>'+
                '</div>'+
                '</span>',
                restrict :'E',
                link: function (scope, element,attrs) {
                    scope.searchText = ' ';
                    scope.autoComplete = false;
                    scope.typeValues = new Array();
                    
                    for(var i=0;i<scope.references.length;i++)
                    {
                        if(scope.references[i].type == scope.type)
                        {
                            scope.typeValues = scope.references[i].values;
                        }
                    }
                    
                    scope.updateValues = function()
                    {
                        scope.lookupvalues = new Array();
                        var count = 0;
                        for(var i=0;i<scope.typeValues.length && count<5;i++)
                        {
                            if(scope.typeValues[i].Name.toLowerCase().indexOf(scope.searchText.toLowerCase()) >= 0)
                            {
                                count++;
                                scope.lookupvalues.push(scope.typeValues[i]);
                            }
                        }
                        if(count<5)
                        {
                            var dbValues =  sforce.connection.query("select id, name from "+scope.type+" where name like '%"+scope.searchText+"%' order by name asc limit 5");
                            if(Array.isArray(dbValues['records']))
                            {
                                scope.lookupvalues = dbValues['records'];
                            }
                            else
                            {
                                var arrayList = new Array();
                                arrayList.push(dbValues['records']);
                                scope.lookupvalues = arrayList;
                            }
                        }
                        scope.autoComplete = true;
                    }
                    
                    scope.selectedValue = function(records)
                    {
                        scope.searchText = records['Name'];
                        scope.record[scope.field.fieldDetail.name] = records['Id'];
                        scope.autoComplete = false;
                    }
                    
                    scope.required = function(field)
                    {
                        if(field.fieldDetail.nillable=='true')
                            return false;
                        return true;
                    }
                }
            };
        });
        
        
        angular.module("DataTableApp").directive("outputField",function($compile){
            return {
                template:'<span ng-switch on="type" >'+
                '<span ng-switch-when="reference"><hyperlink record="value" references="references" field="field" type="referenceto"></hyperlink></span>'+
                
                '<span ng-switch-default ><output ng-show="(val!=undefined && val!=null) || value.updateRecord" type="text" ng-bind="value[field.fieldDetail.name]" id="outputValue"/><output ng-show="(val==undefined || val==null) && !value.updateRecord" type="text" id="outputValue"/></span>'+
                '</span>',
                scope:{
                    type:'=',
                    value: '=',
                    referenceto: '=',
                    field: '=',
                    references: '='
                },
                restrict:'E',
                link:function(scope,element)
                {
                    scope.val =  scope.value[scope.field.fieldDetail.name];
                }
            };
            
        });
        
        angular.module("DataTableApp").directive("hyperlink",function($compile, $window){
            return {
                template:'<a id="outputValue" href="/{{Id}}">{{Name}}</a>',
                
                scope:{
                    type:'=',
                    record: '=',
                    field: '=',
                    references: '='
                },
                
                restrict:'E',
                
                link:function(scope,element)
                {
                    scope.Id = scope.record[scope.field.fieldDetail.name];
                    scope.Name = '';
                    for(var i=0;i<scope.references.length;i++)
                    {
                        if(scope.references[i].type == scope.type)
                        {
                            for(var j=0;j<scope.references[i].values.length;j++)
                            {
                                if(scope.references[i].values[j].Id == scope.Id )
                                {
                                    scope.Name = scope.references[i].values[j].Name;
                                    break;
                                }
                            }
                            break;
                        }
                    }
                    scope.detail = function()
                    {
                        $window.open('/'+scope.Id);
                    }
                }
            };
        }); 
        
        
        angular.module("DataTableApp").directive("apexTable",function($compile, $window){
            return {
                template:'<table>'+
                '<tr>'+
                '<td ng-click="collapseTable();" class="pointer"><h2 ng-hide="collapse">[+]</h2><h2 ng-show="collapse">[-]</h2><h1>{{objectname}}</h1></td>'+
                '<td ><input ng-model="searchText" placeholder="{{objectname}}" /></td>'+
                '<td><button> Create New {{objectname}}</button></td>'+
                '</tr>'+
                '</table>'+
                '<table ng-hide="collapse">'+
                '<tr class="pointer">'+
                '<th ng-repeat="field in fieldlist" ng-click="order(field);" >{{field.fieldDetail.label}}</th>'+
                '</tr>'+ 
                '<tr ng-repeat="record in recordlist | filter:searchText | orderBy:sortField:reverseOrder">'+
                '<td>'+
                '<table>'+
                '<tr>'+
                '<td ng-repeat="field in fieldlist" class="dataHolder" >'+
                '<span class="viewMode" updateable="{{field.fieldDetail.updateable}}" >'+
                '<output-field  references="references"  field="field" type="field.fieldDetail.type" value="record" picklistvalues="field.fieldDetail.picklistValues" referenceto="field.fieldDetail.referenceTo" />'+
                '</span>'+
                '<span class="editMode" style="display:none;" >'+
                '<input-field  references="references"  field="field" type="field.fieldDetail.type" value="record" picklistvalues="field.fieldDetail.picklistValues" referenceto="field.fieldDetail.referenceTo" />'+
                '</span>'+
                '</td>'+
                '</tr>'+
                '<tr>'+
                '<td>'+
                //'<apex-table fieldlist="fieldlist" recordlist="recordlist" references="references" objectName="abc"/>'+
                '</td>'+
                '</tr>'+
                '</table>'+
                '</td>'+
                '</tr>'+ 
                '</table>',
                
                scope:{
                    objectname :'=',
                    recordlist : '=',
                    fieldlist : '=',
                    level:'=',
                    totallevels:'=',
                    references : '='
                },
                
                restrict:'E',
                
                link:function(scope,element,attrs)
                {
                    scope.level = scope.level + 1;
                    scope.sortField = 'Id';
                    scope.reverseOrder = false;
                    scope.searchText = '';
                    scope.collapse = false;
                    scope.order = function(field)
                    {
                        if(scope.sortField.trim().toLowerCase() == field.fieldDetail.name.trim().toLowerCase())
                        {
                            scope.reverseOrder = !scope.reverseOrder;
                        }
                        else
                        {
                            scope.sortField = field.fieldDetail.name;
                            scope.reverseOrder = false;
                        }
                    }
                    
                    scope.collapseTable = function()
                    {
                        scope.collapse = !scope.collapse;
                    }
                },
                
                compile:function(scope,element,attrs)
                {
                }
            };
            
            
            //filters
            angular.module("DataTableApp").filter('search', function(){
                return function(records,word) 
                {
                    var filtered = new Array();
                    if(word!='' && word!=undefined)
                    {
                        for(var i=0;i<records.length;i++)
                        {
                            if(records[i].toString().toLowerCase().indexOf(word.toLowerCase())>0)
                            {
                                filtered.push(records[i]);
                            }
                        }
                        return filtered;
                    }
                    return records;
                };
            });
        }); 
        
        </script>
        <body ng-controller="pageController">
            <apex-table recordlist="records" fieldlist="fields" objectname="objectname" references="referenceArray"></apex-table>
        </body>
    </html>
</apex:page>